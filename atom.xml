<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-07T05:47:24.413Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>_posts</title>
    <link href="http://example.com/2023/06/07/%E6%B8%B8%E5%9B%AD%E4%BC%9Ahint/"/>
    <id>http://example.com/2023/06/07/%E6%B8%B8%E5%9B%AD%E4%BC%9Ahint/</id>
    <published>2023-06-07T05:46:58.183Z</published>
    <updated>2023-06-07T05:47:24.413Z</updated>
    
    <content type="html"><![CDATA[<p>hint1：找路得有地图捏</p><p>hint2：你指尖跃动的电光,是我此生不灭的信仰</p><p>hint3: 我是谁，我在哪儿</p><p>hint4：welcome to ChengDu，这里只有0和1</p><p>hint5：<img src="https://img-blog.csdnimg.cn/c2c52f4c6c9347eab5085fb0780cd1b2.png" alt="img"></p><p>hint6：虽然是正整数，但是小小的也很可爱呢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hint1：找路得有地图捏&lt;/p&gt;
&lt;p&gt;hint2：你指尖跃动的电光,是我此生不灭的信仰&lt;/p&gt;
&lt;p&gt;hint3: 我是谁，我在哪儿&lt;/p&gt;
&lt;p&gt;hint4：welcome to ChengDu，这里只有0和1&lt;/p&gt;
&lt;p&gt;hint5：&lt;img src=&quot;https</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>密码学</title>
    <link href="http://example.com/2023/06/07/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%A0%BC%E9%9B%B7%E7%A0%81/"/>
    <id>http://example.com/2023/06/07/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%A0%BC%E9%9B%B7%E7%A0%81/</id>
    <published>2023-06-07T05:46:58.180Z</published>
    <updated>2023-06-07T05:47:24.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gray"><a href="#Gray" class="headerlink" title="Gray"></a>Gray</h1><h2 id="一-加密方式"><a href="#一-加密方式" class="headerlink" title="一.加密方式"></a>一.加密方式</h2><p>未加密二进制:11011</p><h3 id="1-加密过程"><a href="#1-加密过程" class="headerlink" title="1.加密过程"></a>1.加密过程</h3><p>先0 ^ 第一个数<br>即：<br>0 ^ 1 &#x3D; 1<br>再用第二个数，异或上未被加密时的第一个数，即<em><strong>1</strong></em>1011中的第一个1<br>即：<br>1 ^ 1 &#x3D; 0<br>再用第三个数，异或上未被加密时的第二个数，即1<em><strong>1</strong></em>011中的第二个1<br>即：<br>0 ^ 1 &#x3D; 1<br>再用第四个数，异或上未被加密时的第三个数，即11<em><strong>0</strong></em>11中的0<br>即：<br>1 ^ 0 &#x3D; 1<br>再用第五个数，异或上未被加密时的第四个数，即110<em><strong>1</strong></em>1中的第三个1</p><p>1 ^ 1 &#x3D; 0</p><p>加密后得到的格雷码：10110</p><h3 id="2-解密过程"><a href="#2-解密过程" class="headerlink" title="2.解密过程"></a>2.解密过程</h3><p>先用格雷码的第一位（<em><strong>1</strong></em>0110）  ^ 0</p><p>即：</p><p>1 ^ 0 &#x3D; 1</p><p>再将格雷码的第二位（1<em><strong>0</strong></em>110） ^ 上一步得到的、解码出的数</p><p>即：</p><p>0 ^ 1 &#x3D; 1</p><p>再将格雷码的第三位（10<em><strong>1</strong></em>10） ^ 上一步得到的、解码出的数</p><p>即：</p><p>1 ^ 1 &#x3D; 0</p><p>再将格雷码的第四位（101<em><strong>1</strong></em>0） ^ 上一步得到的、解码出的数</p><p>即：</p><p>1 ^ 0 &#x3D; 1</p><p>再将格雷码的第五位（1011<em><strong>0</strong></em>） ^ 上一步得到的、解码出的数</p><p>即：</p><p>0 ^ 1 &#x3D; 1</p><p>所以解码出来的结果是：11011</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Gray&quot;&gt;&lt;a href=&quot;#Gray&quot; class=&quot;headerlink&quot; title=&quot;Gray&quot;&gt;&lt;/a&gt;Gray&lt;/h1&gt;&lt;h2 id=&quot;一-加密方式&quot;&gt;&lt;a href=&quot;#一-加密方式&quot; class=&quot;headerlink&quot; title=&quot;一.加密方</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>_posts</title>
    <link href="http://example.com/2023/06/07/Untitled/"/>
    <id>http://example.com/2023/06/07/Untitled/</id>
    <published>2023-06-07T05:46:58.176Z</published>
    <updated>2023-06-07T05:47:24.412Z</updated>
    
    <content type="html"><![CDATA[<p>test4</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;test4&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>tets</title>
    <link href="http://example.com/2023/06/07/tets/test/"/>
    <id>http://example.com/2023/06/07/tets/test/</id>
    <published>2023-06-07T05:46:58.173Z</published>
    <updated>2023-06-07T05:47:24.484Z</updated>
    
    <content type="html"><![CDATA[<p>1）不先把图片放到typora，我们先把图片放到cnblog<br>为什么？<br>就是为了让cnblog给我上传以下图片到图床<br>下面就是我要演示的图片</p><p>可以看见下面的图片已经是网络图片了，不再是本地图片</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202212/3069851-20221226220447656-1701235661.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1）不先把图片放到typora，我们先把图片放到cnblog&lt;br&gt;为什么？&lt;br&gt;就是为了让cnblog给我上传以下图片到图床&lt;br&gt;下面就是我要演示的图片&lt;/p&gt;
&lt;p&gt;可以看见下面的图片已经是网络图片了，不再是本地图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>游戏逆向</title>
    <link href="http://example.com/2023/06/07/re/%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91/%E5%8F%AA%E7%8B%BC%E8%A7%A3%E5%8C%85/"/>
    <id>http://example.com/2023/06/07/re/%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91/%E5%8F%AA%E7%8B%BC%E8%A7%A3%E5%8C%85/</id>
    <published>2023-06-07T05:46:58.170Z</published>
    <updated>2023-06-07T05:47:24.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="只狼解包"><a href="#只狼解包" class="headerlink" title="只狼解包"></a>只狼解包</h1><h2 id="action"><a href="#action" class="headerlink" title="action"></a>action</h2><p>（用不上）</p><h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><p>（用不上）</p><h2 id="chr"><a href="#chr" class="headerlink" title="chr"></a>chr</h2><p>角色模型、动画，玩家（C0000）、敌人、Boos、NPC</p><h2 id="cutscene"><a href="#cutscene" class="headerlink" title="cutscene"></a>cutscene</h2><p>过场动画、都是hkx动作文件，加上名字就是过场，盲猜动画</p><h2 id="event"><a href="#event" class="headerlink" title="event"></a>event</h2><p>用不上</p><h2 id="facegen"><a href="#facegen" class="headerlink" title="facegen"></a>facegen</h2><p>脸部模型，慎拆</p><h2 id="font"><a href="#font" class="headerlink" title="font"></a>font</h2><p>游戏内字体</p><h3 id="zhocn-map"><a href="#zhocn-map" class="headerlink" title="zhocn_map"></a>zhocn_map</h3><p>​地图字体（换字体也要改这个，不然乱码）</p><h3 id="zhocn-std"><a href="#zhocn-std" class="headerlink" title="zhocn_std"></a>zhocn_std</h3><p>​其他字体（换字体改这个）</p><h3 id="zhocn-texteffect"><a href="#zhocn-texteffect" class="headerlink" title="zhocn_texteffect"></a>zhocn_texteffect</h3><p>​不知道干吗用的字体（应该？吧？）</p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>地图模型布局等，应该用不到</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;只狼解包&quot;&gt;&lt;a href=&quot;#只狼解包&quot; class=&quot;headerlink&quot; title=&quot;只狼解包&quot;&gt;&lt;/a&gt;只狼解包&lt;/h1&gt;&lt;h2 id=&quot;action&quot;&gt;&lt;a href=&quot;#action&quot; class=&quot;headerlink&quot; title=&quot;actio</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>游戏逆向</title>
    <link href="http://example.com/2023/06/07/re/%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91/%E5%8F%AA%E7%8B%BC/"/>
    <id>http://example.com/2023/06/07/re/%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91/%E5%8F%AA%E7%8B%BC/</id>
    <published>2023-06-07T05:46:58.166Z</published>
    <updated>2023-06-07T05:47:24.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="只狼游戏逆向"><a href="#只狼游戏逆向" class="headerlink" title="只狼游戏逆向"></a>只狼游戏逆向</h1><p>癸卯年乙卯月，余玩《只狼》，被虐良久，战于赤鬼二时余，延未能决胜，耻怒交加，撼胸顿足，于是志学游戏逆向，欲行非法而通关。</p><h2 id="一-工具"><a href="#一-工具" class="headerlink" title="一.工具"></a>一.工具</h2><p>目前只用到了cheat engine 直接官网搜索下载</p><p>官网连接（7.2）：<a href="https://www.cheatengine.org/">https://www.cheatengine.org/</a></p><h2 id="二-过程"><a href="#二-过程" class="headerlink" title="二.过程"></a>二.过程</h2><p>目的：修改血量、架势条、物品数值</p><h3 id="1-寻找血量代码"><a href="#1-寻找血量代码" class="headerlink" title="1.寻找血量代码"></a>1.寻找血量代码</h3><p>通过扫描：减少的数值、增加的数值、未改变的数值判断血量代码</p><p>只狼中，血量以4字节存储</p><p>并且有：UI界面显示，与实际血量 两个</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35724652/1681979101875-7f91d616-9481-441f-a8e9-bade95d3e597.png" alt="img"></p><p>但这个并不是基址，这个是动态地址，我们需要找到基址</p><p>UI界面血量 显示过程因该是：读取实际血量地址中的数据 ——&gt; 改变UI界面</p><p>我觉得以上步骤进行结束后，会将储存UI界面血量的地址内的数据与实际血量地址中的数据进行比较，虽然我还没找到在哪儿比较的……</p><p>因为在修改数值时，如果只修改UI界面的血量，UI的显示会先增加再变回修改前的数值，但只修改实际血量的数值，UI界面显示也会随之变化</p><p>人物体积</p><p>sekiro.exe+B6A155: E8 96 EE FF FF        - call sekiro.exe+B68FF0</p><p>游戏会检测你的体积和敌人的体积，当有重合时，会判定击打有效，当把此函数nop掉后，人物便无敌，但同时你也无法攻击敌人，但吸怪貌似不用人物体积判定</p><p>锁血脚本</p><p>自动汇编、AOB注入</p><p>但同时也不能攻击敌人</p><p>原理：血量有一个共享的函数</p><p>狼和敌人的血量都通过sekiro.exe + E34FD2这个函数计算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : sekiro.exe</span><br><span class="line">  Version: </span><br><span class="line">  Date   : 2023-05-07</span><br><span class="line">  Author : MYX</span><br><span class="line"></span><br><span class="line">  This script does blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">aobscanmodule(INJECT,sekiro.exe,C1 8B 00 89 83 30 01 00 00) // should be unique</span><br><span class="line">alloc(newmem,$1000,&quot;sekiro.exe&quot;+BD651E)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"></span><br><span class="line">newmem:</span><br><span class="line"></span><br><span class="line">code:</span><br><span class="line">  //mov [rbx+00000130],eax</span><br><span class="line">  jmp return</span><br><span class="line"></span><br><span class="line">INJECT+03:</span><br><span class="line">  jmp newmem</span><br><span class="line">  nop</span><br><span class="line">return:</span><br><span class="line">registersymbol(INJECT)</span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"></span><br><span class="line">INJECT+03:</span><br><span class="line">  db 89 83 30 01 00 00</span><br><span class="line"></span><br><span class="line">unregistersymbol(INJECT)</span><br><span class="line">dealloc(newmem)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">// ORIGINAL CODE - INJECTION POINT: &quot;sekiro.exe&quot;+BD651E</span><br><span class="line"></span><br><span class="line">&quot;sekiro.exe&quot;+BD64F7: 48 81 C1 34 01 00 00           -  add rcx,00000134</span><br><span class="line">&quot;sekiro.exe&quot;+BD64FE: C7 44 24 30 00 00 00 00        -  mov [rsp+30],00000000</span><br><span class="line">&quot;sekiro.exe&quot;+BD6506: 85 D2                          -  test edx,edx</span><br><span class="line">&quot;sekiro.exe&quot;+BD6508: 79 07                          -  jns sekiro.exe+BD6511</span><br><span class="line">&quot;sekiro.exe&quot;+BD650A: 48 8D 44 24 30                 -  lea rax,[rsp+30]</span><br><span class="line">&quot;sekiro.exe&quot;+BD650F: EB 0B                          -  jmp sekiro.exe+BD651C</span><br><span class="line">&quot;sekiro.exe&quot;+BD6511: 3B 11                          -  cmp edx,[rcx]</span><br><span class="line">&quot;sekiro.exe&quot;+BD6513: 48 8D 44 24 38                 -  lea rax,[rsp+38]</span><br><span class="line">&quot;sekiro.exe&quot;+BD6518: 48 0F 4F C1                    -  cmovg rax,rcx</span><br><span class="line">&quot;sekiro.exe&quot;+BD651C: 8B 00                          -  mov eax,[rax]</span><br><span class="line">// ---------- INJECTING HERE ----------</span><br><span class="line">&quot;sekiro.exe&quot;+BD651E: 89 83 30 01 00 00              -  mov [rbx+00000130],eax</span><br><span class="line">// ---------- DONE INJECTING  ----------</span><br><span class="line">&quot;sekiro.exe&quot;+BD6524: 85 C0                          -  test eax,eax</span><br><span class="line">&quot;sekiro.exe&quot;+BD6526: 7F 1A                          -  jg sekiro.exe+BD6542</span><br><span class="line">&quot;sekiro.exe&quot;+BD6528: 48 8B CB                       -  mov rcx,rbx</span><br><span class="line">&quot;sekiro.exe&quot;+BD652B: E8 C0 F8 FF FF                 -  call sekiro.exe+BD5DF0</span><br><span class="line">&quot;sekiro.exe&quot;+BD6530: 84 C0                          -  test al,al</span><br><span class="line">&quot;sekiro.exe&quot;+BD6532: 74 0E                          -  je sekiro.exe+BD6542</span><br><span class="line">&quot;sekiro.exe&quot;+BD6534: 85 FF                          -  test edi,edi</span><br><span class="line">&quot;sekiro.exe&quot;+BD6536: 7E 0A                          -  jle sekiro.exe+BD6542</span><br><span class="line">&quot;sekiro.exe&quot;+BD6538: C7 83 30 01 00 00 01 00 00 00  -  mov [rbx+00000130],00000001</span><br><span class="line">&quot;sekiro.exe&quot;+BD6542: 48 8B 5C 24 40                 -  mov rbx,[rsp+40]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-寻找架势条"><a href="#2-寻找架势条" class="headerlink" title="2.寻找架势条"></a>2.寻找架势条</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">code:</span><br><span class="line">  cmp rbx,1</span><br><span class="line">  je ashin</span><br><span class="line">  call sekiro.exe+B68FF0</span><br><span class="line">  jmp return</span><br><span class="line">ashin:</span><br><span class="line">  jmp return</span><br><span class="line"></span><br><span class="line">sekiro.exe+B6CBA5: 0F 84 41 05 00 00        - je sekiro.exe+B6D0EC</span><br></pre></td></tr></table></figure><p>狮子猿攻击：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">RegisterTableGoal(GOAL_Yasyazaru510000_Battle, &quot;GOAL_Yasyazaru510000_Battle&quot;)</span><br><span class="line">REGISTER_GOAL_NO_SUB_GOAL(GOAL_Yasyazaru510000_Battle, true)</span><br><span class="line">Goal.Initialize = function (arg0, arg1, arg2, arg3)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Goal.Activate = function (arg0, arg1, arg2)</span><br><span class="line"></span><br><span class="line">Init_Pseudo_Global(arg1, arg2)</span><br><span class="line"></span><br><span class="line">arg1:SetStringIndexedNumber(&quot;Dist_SideStep&quot;, 0)</span><br><span class="line"></span><br><span class="line">arg1:SetStringIndexedNumber(&quot;Dist_BackStep&quot;, 0)</span><br><span class="line"></span><br><span class="line">local f2_local0 = &#123;&#125;</span><br><span class="line"></span><br><span class="line">local f2_local1 = &#123;&#125;</span><br><span class="line"></span><br><span class="line">local f2_local2 = &#123;&#125;</span><br><span class="line"></span><br><span class="line">Common_Clear_Param(f2_local0, f2_local1, f2_local2)</span><br><span class="line"></span><br><span class="line">local f2_local3 = arg1:GetHpRate(TARGET_SELF)</span><br><span class="line"></span><br><span class="line">local f2_local4 = arg1:GetSpRate(TARGET_SELF)</span><br><span class="line"></span><br><span class="line">local f2_local5 = arg1:GetDist(TARGET_ENE_0)</span><br><span class="line"></span><br><span class="line">local f2_local6 = arg1:GetRandam_Int(1, 100)</span><br><span class="line"></span><br><span class="line">local f2_local7 = arg1:GetExcelParam(AI_EXCEL_THINK_PARAM_TYPE__thinkAttr_doAdmirer)</span><br><span class="line"></span><br><span class="line">local f2_local8 = arg1:GetEventRequest()</span><br><span class="line"></span><br><span class="line">local f2_local9 = arg1:GetEventRequest(1)</span><br><span class="line"></span><br><span class="line">local f2_local10 = arg1:GetDistY(TARGET_SELF)</span><br><span class="line"></span><br><span class="line">local f2_local11 = arg1:GetDistY(TARGET_ENE_0)</span><br><span class="line"></span><br><span class="line">local f2_local12 = arg1:HasSpecialEffectId(TARGET_SELF, 200050)</span><br><span class="line"></span><br><span class="line">arg1:SetNumber(11, 0)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 5025)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 5026)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 5027)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 5031)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_EVENT, 5034)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 5039)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_SELF, 3510020)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_ENE_0, 110010)</span><br><span class="line"></span><br><span class="line">arg1:AddObserveSpecialEffectAttribute(TARGET_ENE_0, 110030)</span><br><span class="line"></span><br><span class="line">arg1:DeleteObserve(2)</span><br><span class="line"></span><br><span class="line">arg1:DeleteObserve(3)</span><br><span class="line"></span><br><span class="line">if arg0:Kengeki_Activate(arg1, arg2) then</span><br><span class="line"></span><br><span class="line">return</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if f2_local8 == 10 then</span><br><span class="line"></span><br><span class="line">f2_local0[20] = 100</span><br><span class="line"></span><br><span class="line">elseif arg1:HasSpecialEffectId(TARGET_EVENT, 5033) then</span><br><span class="line"></span><br><span class="line">f2_local0[39] = 100</span><br><span class="line"></span><br><span class="line">elseif f2_local9 == 10 or arg1:GetNumber(1) == 1 then</span><br><span class="line"></span><br><span class="line">if arg1:IsInsideTarget(TARGET_ENE_0, AI_DIR_TYPE_B, 90) then</span><br><span class="line"></span><br><span class="line">if f2_local5 &gt;= 7 then</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 100</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 100</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">elseif not not arg1:HasSpecialEffectId(TARGET_ENE_0, 110060) or arg1:HasSpecialEffectId(TARGET_ENE_0, 110010) then</span><br><span class="line"></span><br><span class="line">f2_local0[39] = 100</span><br><span class="line"></span><br><span class="line">elseif Common_ActivateAct(arg1, arg2) then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elseif arg1:IsInsideTarget(TARGET_ENE_0, AI_DIR_TYPE_F, 180) and not arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_F, 5) and arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_B, 3) then</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[44] = 100</span><br><span class="line"></span><br><span class="line">elseif arg1:HasSpecialEffectId(TARGET_ENE_0, COMMON_SP_EFFECT_PC_BREAK) and not f2_local12 then</span><br><span class="line"></span><br><span class="line">if f2_local5 &gt; 12 then</span><br><span class="line"></span><br><span class="line">f2_local0[12] = 100</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 100</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">if f2_local5 &gt;= 18 then</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[15] = 800</span><br><span class="line"></span><br><span class="line">f2_local0[18] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[19] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[43] = 100</span><br><span class="line"></span><br><span class="line">elseif f2_local5 &gt;= 12 then</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[15] = 800</span><br><span class="line"></span><br><span class="line">f2_local0[18] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[19] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[43] = 100</span><br><span class="line"></span><br><span class="line">elseif f2_local5 &gt;= 5 then</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[15] = 800</span><br><span class="line"></span><br><span class="line">f2_local0[18] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[19] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 50</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(3) == true then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">f2_local0[13] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[14] = 500</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 50</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(1) == false then</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 0</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if not arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_L, 2) or not arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_R, 2) then</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 200</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">elseif not not arg1:HasSpecialEffectId(TARGET_ENE_0, 110060) or arg1:HasSpecialEffectId(TARGET_ENE_0, 110010) then</span><br><span class="line"></span><br><span class="line">f2_local0[39] = 100</span><br><span class="line"></span><br><span class="line">elseif Common_ActivateAct(arg1, arg2) then</span><br><span class="line"></span><br><span class="line">elseif f2_local8 == 20 then</span><br><span class="line"></span><br><span class="line">f2_local0[12] = 250</span><br><span class="line"></span><br><span class="line">elseif arg1:HasSpecialEffectId(TARGET_SELF, 5027) and not f2_local12 then</span><br><span class="line"></span><br><span class="line">f2_local0[48] = 100</span><br><span class="line"></span><br><span class="line">elseif arg1:HasSpecialEffectId(TARGET_SELF, 5030) and f2_local5 &gt;= 10 then</span><br><span class="line"></span><br><span class="line">f2_local0[18] = 100</span><br><span class="line"></span><br><span class="line">elseif arg1:IsInsideTarget(TARGET_ENE_0, AI_DIR_TYPE_B, 90) then</span><br><span class="line"></span><br><span class="line">if f2_local5 &gt;= 7 then</span><br><span class="line"></span><br><span class="line">f2_local0[10] = 150</span><br><span class="line"></span><br><span class="line">f2_local0[11] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 100</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">f2_local0[4] = 300</span><br><span class="line"></span><br><span class="line">f2_local0[10] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[11] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 100</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">if not not arg1:HasSpecialEffectId(TARGET_ENE_0, 110060) or arg1:HasSpecialEffectId(TARGET_ENE_0, 110010) then</span><br><span class="line"></span><br><span class="line">f2_local0[39] = 100</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">if f2_local5 &gt;= 22 then</span><br><span class="line"></span><br><span class="line">f2_local0[1] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[10] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[11] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[12] = 250</span><br><span class="line"></span><br><span class="line">elseif f2_local5 &gt;= 18 then</span><br><span class="line"></span><br><span class="line">f2_local0[1] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[10] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[11] = 100</span><br><span class="line"></span><br><span class="line">elseif f2_local5 &gt;= 12 then</span><br><span class="line"></span><br><span class="line">f2_local0[1] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[7] = 100</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(3) == true then</span><br><span class="line"></span><br><span class="line">f2_local0[33] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[34] = 50</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">elseif f2_local5 &gt;= 8 then</span><br><span class="line"></span><br><span class="line">f2_local0[1] = 75</span><br><span class="line"></span><br><span class="line">f2_local0[2] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 200</span><br><span class="line"></span><br><span class="line">f2_local0[7] = 75</span><br><span class="line"></span><br><span class="line">f2_local0[9] = 150</span><br><span class="line"></span><br><span class="line">f2_local0[13] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 50</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(3) == true then</span><br><span class="line"></span><br><span class="line">f2_local0[33] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[34] = 100</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">f2_local0[1] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[2] = 150</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[7] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[9] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[13] = 75</span><br><span class="line"></span><br><span class="line">f2_local0[14] = 500</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 50</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 50</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(3) == true then</span><br><span class="line"></span><br><span class="line">f2_local0[33] = 100</span><br><span class="line"></span><br><span class="line">f2_local0[34] = 100</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(4) == false or f2_local3 &lt;= 0.6 then</span><br><span class="line"></span><br><span class="line">f2_local0[6] = 0</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if arg1:IsFinishTimer(1) == false then</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 0</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if not arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_L, 2) or not arg1:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_R, 2) then</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 200</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if f2_local12 then</span><br><span class="line"></span><br><span class="line">f2_local0[33] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[34] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[12] = 0</span><br><span class="line"></span><br><span class="line">f2_local0[15] = 200</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if not not arg1:HasSpecialEffectId(TARGET_ENE_0, 109031) or arg1:HasSpecialEffectId(TARGET_ENE_0, 110125) then</span><br><span class="line"></span><br><span class="line">f2_local0[5] = 1</span><br><span class="line"></span><br><span class="line">f2_local0[13] = 1</span><br><span class="line"></span><br><span class="line">f2_local0[33] = 1</span><br><span class="line"></span><br><span class="line">f2_local0[34] = 1</span><br><span class="line"></span><br><span class="line">f2_local0[36] = 1</span><br><span class="line"></span><br><span class="line">f2_local0[42] = 1</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">f2_local0[1] = SetCoolTime(arg1, arg2, 3000, 15, f2_local0[1], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[2] = SetCoolTime(arg1, arg2, 3003, 15, f2_local0[2], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[3] = SetCoolTime(arg1, arg2, 3008, 15, f2_local0[3], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[5] = SetCoolTime(arg1, arg2, 3009, 20, f2_local0[5], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[6] = SetCoolTime(arg1, arg2, 3012, 5, f2_local0[6], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[7] = SetCoolTime(arg1, arg2, 3020, 10, f2_local0[7], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[9] = SetCoolTime(arg1, arg2, 3021, 10, f2_local0[9], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[13] = SetCoolTime(arg1, arg2, 3015, 15, f2_local0[13], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[14] = SetCoolTime(arg1, arg2, 3016, 10, f2_local0[14], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[15] = SetCoolTime(arg1, arg2, 3028, 8, f2_local0[15], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[18] = SetCoolTime(arg1, arg2, 3018, 5, f2_local0[18], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[19] = SetCoolTime(arg1, arg2, 3029, 5, f2_local0[19], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[29] = SetCoolTime(arg1, arg2, 3017, 15, f2_local0[29], 1)</span><br><span class="line"></span><br><span class="line">f2_local0[46] = SetCoolTime(arg1, arg2, 3005, 10, f2_local0[46], 1)</span><br><span class="line"></span><br><span class="line">f2_local1[1] = REGIST_FUNC(arg1, arg2, arg0.Act01)</span><br><span class="line"></span><br><span class="line">f2_local1[2] = REGIST_FUNC(arg1, arg2, arg0.Act02)</span><br><span class="line"></span><br><span class="line">f2_local1[3] = REGIST_FUNC(arg1, arg2, arg0.Act03)</span><br><span class="line"></span><br><span class="line">f2_local1[4] = REGIST_FUNC(arg1, arg2, arg0.Act04)</span><br><span class="line"></span><br><span class="line">f2_local1[5] = REGIST_FUNC(arg1, arg2, arg0.Act05)</span><br><span class="line"></span><br><span class="line">f2_local1[6] = REGIST_FUNC(arg1, arg2, arg0.Act06)</span><br><span class="line"></span><br><span class="line">f2_local1[7] = REGIST_FUNC(arg1, arg2, arg0.Act07)</span><br><span class="line"></span><br><span class="line">f2_local1[8] = REGIST_FUNC(arg1, arg2, arg0.Act08)</span><br><span class="line"></span><br><span class="line">f2_local1[9] = REGIST_FUNC(arg1, arg2, arg0.Act09)</span><br><span class="line"></span><br><span class="line">f2_local1[10] = REGIST_FUNC(arg1, arg2, arg0.Act10)</span><br><span class="line"></span><br><span class="line">f2_local1[11] = REGIST_FUNC(arg1, arg2, arg0.Act11)</span><br><span class="line"></span><br><span class="line">f2_local1[12] = REGIST_FUNC(arg1, arg2, arg0.Act12)</span><br><span class="line"></span><br><span class="line">f2_local1[13] = REGIST_FUNC(arg1, arg2, arg0.Act13)</span><br><span class="line"></span><br><span class="line">f2_local1[14] = REGIST_FUNC(arg1, arg2, arg0.Act14)</span><br><span class="line"></span><br><span class="line">f2_local1[15] = REGIST_FUNC(arg1, arg2, arg0.Act15)</span><br><span class="line"></span><br><span class="line">f2_local1[16] = REGIST_FUNC(arg1, arg2, arg0.Act16)</span><br><span class="line"></span><br><span class="line">f2_local1[17] = REGIST_FUNC(arg1, arg2, arg0.Act17)</span><br><span class="line"></span><br><span class="line">f2_local1[18] = REGIST_FUNC(arg1, arg2, arg0.Act18)</span><br><span class="line"></span><br><span class="line">f2_local1[19] = REGIST_FUNC(arg1, arg2, arg0.Act19)</span><br><span class="line"></span><br><span class="line">f2_local1[20] = REGIST_FUNC(arg1, arg2, arg0.Act20)</span><br><span class="line"></span><br><span class="line">f2_local1[29] = REGIST_FUNC(arg1, arg2, arg0.Act29)</span><br><span class="line"></span><br><span class="line">f2_local1[30] = REGIST_FUNC(arg1, arg2, arg0.Act30)</span><br><span class="line"></span><br><span class="line">f2_local1[31] = REGIST_FUNC(arg1, arg2, arg0.Act31)</span><br><span class="line"></span><br><span class="line">f2_local1[32] = REGIST_FUNC(arg1, arg2, arg0.Act32)</span><br><span class="line"></span><br><span class="line">f2_local1[33] = REGIST_FUNC(arg1, arg2, arg0.Act33)</span><br><span class="line"></span><br><span class="line">f2_local1[34] = REGIST_FUNC(arg1, arg2, arg0.Act34)</span><br><span class="line"></span><br><span class="line">f2_local1[35] = REGIST_FUNC(arg1, arg2, arg0.Act35)</span><br><span class="line"></span><br><span class="line">f2_local1[36] = REGIST_FUNC(arg1, arg2, arg0.Act36)</span><br><span class="line"></span><br><span class="line">f2_local1[37] = REGIST_FUNC(arg1, arg2, arg0.Act37)</span><br><span class="line"></span><br><span class="line">f2_local1[38] = REGIST_FUNC(arg1, arg2, arg0.Act38)</span><br><span class="line"></span><br><span class="line">f2_local1[39] = REGIST_FUNC(arg1, arg2, arg0.Act39)</span><br><span class="line"></span><br><span class="line">f2_local1[40] = REGIST_FUNC(arg1, arg2, arg0.Act40)</span><br><span class="line"></span><br><span class="line">f2_local1[41] = REGIST_FUNC(arg1, arg2, arg0.Act41)</span><br><span class="line"></span><br><span class="line">f2_local1[42] = REGIST_FUNC(arg1, arg2, arg0.Act42)</span><br><span class="line"></span><br><span class="line">f2_local1[43] = REGIST_FUNC(arg1, arg2, arg0.Act43)</span><br><span class="line"></span><br><span class="line">f2_local1[44] = REGIST_FUNC(arg1, arg2, arg0.Act44)</span><br><span class="line"></span><br><span class="line">f2_local1[45] = REGIST_FUNC(arg1, arg2, arg0.Act45)</span><br><span class="line"></span><br><span class="line">f2_local1[46] = REGIST_FUNC(arg1, arg2, arg0.Act46)</span><br><span class="line"></span><br><span class="line">f2_local1[47] = REGIST_FUNC(arg1, arg2, arg0.Act47)</span><br><span class="line"></span><br><span class="line">f2_local1[48] = REGIST_FUNC(arg1, arg2, arg0.Act48)</span><br><span class="line"></span><br><span class="line">local f2_local13 = REGIST_FUNC(arg1, arg2, arg0.ActAfter_AdjustSpace)</span><br><span class="line"></span><br><span class="line">Common_Battle_Activate(arg1, arg2, f2_local0, f2_local1, f2_local13, f2_local2)</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">Goal.Act01 = function (arg0, arg1, arg2)</span><br><span class="line">local f3_local0 = arg0:GetDist(TARGET_ENE_0)</span><br><span class="line">local f3_local1 = 9.6 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f3_local2 = arg0:GetRandam_Float(3, 9)</span><br><span class="line">local f3_local3 = false</span><br><span class="line">local f3_local4 = 5</span><br><span class="line">if f3_local1 &lt; f3_local0 then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ApproachTarget, f3_local4, TARGET_ENE_0, f3_local1, TARGET_SELF, f3_local3, -1)</span><br><span class="line">end</span><br><span class="line">local f3_local5 = 3000</span><br><span class="line">local f3_local6 = 3001</span><br><span class="line">local f3_local7 = 3002</span><br><span class="line">local f3_local8 = 9.6 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f3_local9 = 9.6 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f3_local10 = 9.6 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f3_local11 = 0</span><br><span class="line">local f3_local12 = 0</span><br><span class="line">local f3_local13 = arg0:GetRandam_Int(1, 100)</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ComboTunable_SuccessAngle180, 10, f3_local5, TARGET_ENE_0, 999, 0, 0, 0, 0)</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ComboRepeat_SuccessAngle180, 10, f3_local6, TARGET_ENE_0, 999, 0, 0, 0, 0)</span><br><span class="line">arg0:SetNumber(5, 1)</span><br><span class="line">GetWellSpace_Odds = 0</span><br><span class="line">return GetWellSpace_Odds</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Goal.Act02 = function (arg0, arg1, arg2)</span><br><span class="line">local f4_local0 = arg0:GetDist(TARGET_ENE_0)</span><br><span class="line">local f4_local1 = 9.2 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f4_local2 = false</span><br><span class="line">local f4_local3 = 10</span><br><span class="line">if f4_local1 &lt; f4_local0 then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ApproachTarget, f4_local3, TARGET_ENE_0, f4_local1, TARGET_SELF, f4_local2, -1)</span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line">local f4_local4 = 3003</span><br><span class="line">local f4_local5 = 3004</span><br><span class="line">local f4_local6 = 3023</span><br><span class="line">local f4_local7 = 9.2 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f4_local8 = 5.6 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f4_local9 = 0</span><br><span class="line">local f4_local10 = 0</span><br><span class="line">local f4_local11 = arg0:GetRandam_Int(1, 100)</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ComboAttackTunableSpin, 10, f4_local4, TARGET_ENE_0, f4_local7, f4_local9, f4_local10, 0, 0)</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, f4_local5, TARGET_ENE_0, f4_local8, f4_local9, f4_local10, 0, 0)</span><br><span class="line">arg0:SetNumber(5, 1)</span><br><span class="line">GetWellSpace_Odds = 0</span><br><span class="line">return GetWellSpace_Odds</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Goal.Act03 = function (arg0, arg1, arg2)</span><br><span class="line">local f5_local0 = arg0:GetDist(TARGET_ENE_0)</span><br><span class="line">local f5_local1 = 26.8 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f5_local2 = false</span><br><span class="line">local f5_local3 = 10</span><br><span class="line">if f5_local1 &lt; f5_local0 then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ApproachTarget, f5_local3, TARGET_ENE_0, f5_local1, TARGET_SELF, f5_local2, -1)</span><br><span class="line">elseif f5_local1 - 8 &lt; f5_local0 then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_AttackTunableSpin, 4, 3023, TARGET_ENE_0, SuccessDist1, TurnTime, FrontAngle, 0, 0)</span><br><span class="line">elseif f5_local1 - 24 &lt; f5_local0 then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_SpinStep, StepLife, 5211, TARGET_ENE_0, TurnTime, AI_DIR_TYPE_F, CourseLong)</span><br><span class="line">else</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_AttackTunableSpin, 4, 3023, TARGET_ENE_0, SuccessDist1, TurnTime, FrontAngle, 0, 0)</span><br><span class="line">return false</span><br><span class="line">end</span><br><span class="line">local f5_local4 = 3008</span><br><span class="line">local f5_local5 = 26.8 - arg0:GetMapHitRadius(TARGET_SELF)</span><br><span class="line">local f5_local6 = 0</span><br><span class="line">local f5_local7 = 120</span><br><span class="line">if arg0:IsExistMeshOnLine(TARGET_SELF, AI_DIR_TYPE_F, 15) then</span><br><span class="line">arg1:AddSubGoal(GOAL_COMMON_ComboTunable_SuccessAngle180, 15, f5_local4, TARGET_ENE_0, 9999, f5_local6, f5_local7, 0, 0)</span><br><span class="line">else</span><br><span class="line">return false</span><br><span class="line">end</span><br><span class="line">GetWellSpace_Odds = 0</span><br><span class="line">return GetWellSpace_Odds</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="三-遇到的问题"><a href="#三-遇到的问题" class="headerlink" title="三 .遇到的问题"></a>三 .遇到的问题</h2><p>“使用Cheat Engine的调试器附加当前进程”时只狼会闪退，布吉岛为神马……百度ing</p><p>解决方法：之前用到CE 7.2，换成CE 7.0后解决，但是7.0貌似不会自动帮你识别…</p><p>附CE 7.0的下载连接：<a href="https://www.lanzouj.com/b0ddp6qgf">https://www.lanzouj.com/b0ddp6qgf</a></p><p>没写完……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;只狼游戏逆向&quot;&gt;&lt;a href=&quot;#只狼游戏逆向&quot; class=&quot;headerlink&quot; title=&quot;只狼游戏逆向&quot;&gt;&lt;/a&gt;只狼游戏逆向&lt;/h1&gt;&lt;p&gt;癸卯年乙卯月，余玩《只狼》，被虐良久，战于赤鬼二时余，延未能决胜，耻怒交加，撼胸顿足，于是志学游戏逆向，欲行</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2023-06-07T05:46:58.163Z</published>
    <updated>2023-06-07T05:47:24.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编学习（一）"><a href="#汇编学习（一）" class="headerlink" title="汇编学习（一）"></a>汇编学习（一）</h1><h2 id="一、必须了解的基础知识"><a href="#一、必须了解的基础知识" class="headerlink" title="一、必须了解的基础知识"></a>一、必须了解的基础知识</h2><h2 id="1-80x86处理器的工作模式"><a href="#1-80x86处理器的工作模式" class="headerlink" title="1.80x86处理器的工作模式"></a>1.80x86处理器的工作模式</h2><p>（1）.实模式</p><p>（2）.保护模式</p><p>（3）.虚拟8086模式</p><h2 id="2-Windows的内存管理机制"><a href="#2-Windows的内存管理机制" class="headerlink" title="2.Windows的内存管理机制"></a>2.Windows的内存管理机制</h2><p>（1）.Dos操作系统的内存安排情况</p><p>（2）.80386的内存寻址机制</p><p>（3）.80386的内存分页机制</p><p>（4）.Windows的内存安排</p><p>（5）.从Win32汇编的角度看内存寻址</p><h2 id="3-Windows的特权保护机制"><a href="#3-Windows的特权保护机制" class="headerlink" title="3.Windows的特权保护机制"></a>3.Windows的特权保护机制</h2><p>（1）.80386的中断和异常</p><p>（2）.80386的保护机制</p><p>（3）.Windows的保护机制</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;汇编学习（一）&quot;&gt;&lt;a href=&quot;#汇编学习（一）&quot; class=&quot;headerlink&quot; title=&quot;汇编学习（一）&quot;&gt;&lt;/a&gt;汇编学习（一）&lt;/h1&gt;&lt;h2 id=&quot;一、必须了解的基础知识&quot;&gt;&lt;a href=&quot;#一、必须了解的基础知识&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2023-06-07T05:46:58.158Z</published>
    <updated>2023-06-07T05:47:24.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础知识"><a href="#汇编基础知识" class="headerlink" title="汇编基础知识"></a>汇编基础知识</h1><h2 id="一-偏移基址"><a href="#一-偏移基址" class="headerlink" title="一.偏移基址"></a>一.偏移基址</h2><h2 id="二-地址总线"><a href="#二-地址总线" class="headerlink" title="二.地址总线"></a>二.地址总线</h2><p>CPU主要用于处理数据，其内容的储存空间非常有限，因此需要将数据存储到专门储存功能的内存中</p><p>地址总线的作用是：CPU 通过地址找到对应的内存的物理数据的传递工具</p><p>由于计算机只能处理 0、1 二进制数据，每一条线可以处理 0、1 两种类型数据，所以若只有一根地址总线，那么可以索引地址0、地址1的两个内存地址。若有两根地址总线，那么可以索引2 ^ 2 &#x3D; 4个内存地址：00、01、10、11</p><p>一个 16位宽度的位址总线 到达 2 的 16 次方 &#x3D; 65536 &#x3D; 64 KB 的内存位址</p><p>一个 32位单元位址总线 可以寻址到 4,294,967,296 &#x3D; 4 GB 的位址。但现在很多计算机内存已经大于4GB</p><p>64位的处理器也就是说可以寻址到2^64&#x3D;16EB的位址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;汇编基础知识&quot;&gt;&lt;a href=&quot;#汇编基础知识&quot; class=&quot;headerlink&quot; title=&quot;汇编基础知识&quot;&gt;&lt;/a&gt;汇编基础知识&lt;/h1&gt;&lt;h2 id=&quot;一-偏移基址&quot;&gt;&lt;a href=&quot;#一-偏移基址&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E5%AF%84%E5%AD%98%E5%99%A8/</id>
    <published>2023-06-07T05:46:58.154Z</published>
    <updated>2023-06-07T05:47:24.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h1><h2 id="一-CPU概述"><a href="#一-CPU概述" class="headerlink" title="一.CPU概述"></a>一.CPU概述</h2><p>一个典型的CPU由运算器、控制器、寄存器等器件组成，这些器件靠内部总线相连</p><p>内部总线和外部总线的区别：</p><p>内部总线实现CPU内部各个器件之间的联系，外部总线实现CPU和主板上其他器件的联系</p><h2 id="二-寄存器概述"><a href="#二-寄存器概述" class="headerlink" title="二.寄存器概述"></a>二.寄存器概述</h2><p>8086CPU有14个寄存器，它们的名称为：AX、BX、CX、DX、SI、DI、SP、BP、IP、CS、SS、DS、ES、PSW</p><h3 id="1-通用寄存器"><a href="#1-通用寄存器" class="headerlink" title="1.通用寄存器"></a>1.通用寄存器</h3><p>8086CPU所有的寄存器都是16位的，可以存放2个字节</p><p>AX、BX、CX、DX通常用来存放一般性数据，称为通用寄存器</p><p>下面以AX为例，看一下通用寄存器的逻辑结构</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315164816695-975385526.png"></p><p>一个16位寄存器可以存储一个16位的数据（数据的有效存放情况）</p><p>例如：</p><p>数据：18</p><p>二进制表示：10010</p><p>在寄存器AX中的储存：</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315164956953-117404899.png"></p><p>8086上一代CPU中的寄存器都是8位的</p><p>为了保证兼容性，这四个寄存器都可以分为两个独立的8位寄存器使用</p><p>即AX可以分为AH和AL，AH中的H是high的意思，即存储高8位，AL中的L是low的意思，即存储低8位</p><p>BX分为BH和BL</p><p>CX分为CH和CL</p><p>DX分为DH和DL</p><p>8086CPU的8位寄存器存储逻辑</p><p>以AX为例，8086CPU的16位寄存器分为两个8位寄存器的情况：</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315165721397-1180945100.png"></p><p>AX的低8位（0位<del>7位）构成了AL寄存器，高8位（8位</del>15位）构成了AH寄存器</p><p>AH和AL寄存器是可以独立使用的8位寄存器</p><p>8086CPU8位寄存器的存储状况：</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315170005256-1383853706.png"></p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315170049333-459137402.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;寄存器&quot;&gt;&lt;a href=&quot;#寄存器&quot; class=&quot;headerlink&quot; title=&quot;寄存器&quot;&gt;&lt;/a&gt;寄存器&lt;/h1&gt;&lt;h2 id=&quot;一-CPU概述&quot;&gt;&lt;a href=&quot;#一-CPU概述&quot; class=&quot;headerlink&quot; title=&quot;一.CPU概述</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E5%90%84%E7%B1%BB%E5%AD%98%E5%82%A8%E5%99%A8%E5%8F%8A%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/%E5%90%84%E7%B1%BB%E5%AD%98%E5%82%A8%E5%99%A8%E5%8F%8A%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4/</id>
    <published>2023-06-07T05:46:58.148Z</published>
    <updated>2023-06-07T05:47:24.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="各类存储器芯片及内存地址空间"><a href="#各类存储器芯片及内存地址空间" class="headerlink" title="各类存储器芯片及内存地址空间"></a>各类存储器芯片及内存地址空间</h1><p>从读写属性上来看分为两类：随机存储器（RAM）和只读存储器（ROM）</p><p>从功能和连接上分类：随机存储器RAM、装有BIOS的ROM、接口卡上的RAM</p><h2 id="一-随机存储器："><a href="#一-随机存储器：" class="headerlink" title="一.随机存储器："></a>一.随机存储器：</h2><p>断电后数据会遗失</p><p>如内存</p><h2 id="二-只读存储器"><a href="#二-只读存储器" class="headerlink" title="二.只读存储器"></a>二.只读存储器</h2><p>永远只能读取，但是里面的数据永远都保存在那里，除非你把它刷掉了</p><p>PC机中各类存储器的逻辑连接情况</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315154559085-324661907.png"></p><h2 id="三-内存地址空间"><a href="#三-内存地址空间" class="headerlink" title="三.内存地址空间"></a>三.内存地址空间</h2><p>上述的那些存储器在物理上是独立的器件，但是他们在以下两点上相同</p><p>1.都和CPU的总线相连</p><p>2.CPU对他们进行读或写的时候都通过控制线发出内存读写命令</p><p>从CPU来看，将各类存储器看作一个逻辑存储器：</p><p>1.所有的物理存储器被看作一个由若干个存储单元组成的逻辑存储器</p><p>2.每个物理存储器在这个逻辑存储器中占有一个地址段，及一段地址空间</p><p>3.CPU在这段地址空间中读写数据，实际上就是在相应的物理存储器中读写数据</p><p>CPU的视角</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315155426584-539254997.png"></p><p>8086PC机的内存地址空间分配</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230315160525616-1546809477.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;各类存储器芯片及内存地址空间&quot;&gt;&lt;a href=&quot;#各类存储器芯片及内存地址空间&quot; class=&quot;headerlink&quot; title=&quot;各类存储器芯片及内存地址空间&quot;&gt;&lt;/a&gt;各类存储器芯片及内存地址空间&lt;/h1&gt;&lt;p&gt;从读写属性上来看分为两类：随机存储器（RAM</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/BIOS%E4%B8%AD%E6%96%AD/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/BIOS%E4%B8%AD%E6%96%AD/</id>
    <published>2023-06-07T05:46:58.145Z</published>
    <updated>2023-06-07T05:47:24.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BIOS中断"><a href="#BIOS中断" class="headerlink" title="BIOS中断"></a>BIOS中断</h1><h2 id="一-BIOS中断大全"><a href="#一-BIOS中断大全" class="headerlink" title="一.BIOS中断大全"></a>一.BIOS中断大全</h2><h3 id="1、显示服务-Video-Service——INT-10H"><a href="#1、显示服务-Video-Service——INT-10H" class="headerlink" title="1、显示服务(Video Service——INT 10H)"></a><strong>1、显示服务(Video Service——INT 10H)</strong></h3><p>00H —设置显示器模式0CH —写图形象素<br>01H —设置光标形状0DH —读图形象素<br>02H —设置光标位置0EH —在Teletype模式下显示字符<br>03H —读取光标信息0FH —读取显示器模式<br>04H —读取光笔位置10H —颜色<br>05H —设置显示页11H —字体<br>06H、07H —初始化或滚屏12H —显示器的配置<br>08H —读光标处的字符及其属性13H —在Teletype模式下显示字符串<br>09H —在光标处按指定属性显示字符1AH —读取&#x2F;设置显示组合编码<br>0AH —在当前光标处显示字符1BH —读取功能&#x2F;状态信息<br>0BH —设置调色板、背景色或边框1CH —保存&#x2F;恢复显示器状态</p><h4 id="1-、功能00H"><a href="#1-、功能00H" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：设置显示器模式<br>入口参数：AH＝00H<br>AL＝显示器模式，见下表所示<br>出口参数：无<br>可用的显示模式如下所列：<br>显示模式显示模式属性显示模式显示模式属性<br>00H40×2516色 文本01H40×2516色 文本<br>02H80×2516色 文本03H80×2516色 文本<br>04H320×2004色05H320×2004色<br>06H640×2002色07H80×252色 文本<br>08H160×20016色09H320×20016色<br>0AH640×2004色0BH保留　<br>0CH保留0DH320×20016色<br>0EH640×20016色0FH640×3502(单色)<br>10H640×3504色10H640×35016色<br>11H640×4802色12H640×48016色<br>13H640×480256色<br>对于超级VGA显示卡，我们可用AX＝4F02H和下列BX的值来设置其显示模式。<br>BX显示模式属性BX显示模式属性<br>100H640×400256色101H640×480256色<br>102H800×60016色103H800×600256色<br>104H1024×76816色105H1024×768256色<br>106H1280×102416色107H1280×1024256色<br>108H80×60文本模式109H132×25文本模式<br>10AH132×43文本模式10BH132×50文本模式<br>10CH132×60文本模式</p><h4 id="2-、功能01H"><a href="#2-、功能01H" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：设置光标形状<br>入口参数：AH＝01H<br>CH低四位＝光标的起始行<br>CL低四位＝光标的终止行<br>出口参数：无</p><h4 id="3-、功能02H"><a href="#3-、功能02H" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：用文本坐标下设置光标位置<br>入口参数：AH＝02H<br>BH＝显示页码<br>DH＝行(Y坐标)<br>DL＝列(X坐标)<br>出口参数：无</p><h4 id="4-、功能03H"><a href="#4-、功能03H" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：在文本坐标下，读取光标各种信息<br>入口参数：AH＝03H<br>BH＝显示页码<br>出口参数：CH＝光标的起始行<br>CL＝光标的终止行<br>DH＝行(Y坐标)<br>DL＝列(X坐标)</p><h4 id="5-、功能04H"><a href="#5-、功能04H" class="headerlink" title="(5)、功能04H"></a>(5)、功能04H</h4><p>功能描述：获取当前状态和光笔位置<br>入口参数：AH＝04H<br>出口参数：AH＝00h——光笔未按下&#x2F;未触发，01h——光笔已按下&#x2F;已触发<br>BX＝象素列(图形X坐标)<br>CH＝象素行(图形Y坐标，显示模式：04H<del>06H)<br>CX＝象素行(图形Y坐标，显示模式：0DH</del>10H)<br>DH＝字符行(文本Y坐标)<br>DL＝字符列(文本X坐标)</p><h4 id="6-、功能05H"><a href="#6-、功能05H" class="headerlink" title="(6)、功能05H"></a>(6)、功能05H</h4><p>功能描述：设置显示页，即选择活动的显示页<br>入口参数：AH＝05H<br>AL＝显示页<br>对于CGA、EGA、MCGA和VGA，其显示页如下表所列： 模式页数显示器类型<br>00H、01H0<del>7CGA、EGA、MCGA、VGA<br>02H、03H0</del>3CGA<br>02H、03H0<del>7EGA、MCGA、VGA<br>07H0</del>7EGA、VGA<br>0DH0<del>7EGA、VGA<br>0EH0</del>3EGA、VGA<br>0FH0<del>1EGA、VGA<br>10H0</del>1EGA、VGA<br>对于PCjr：<br>AL＝80H——读取CRT&#x2F;CPU页寄存器<br>81H——设置CPU页寄存器<br>82H——设置CRT页寄存器<br>83H——设置CRT&#x2F;CPU页寄存器<br>BH＝CRT页(子功能号82H和83H)<br>BL＝CPU页(子功能号81H和83H)<br>出口参数：对于前者，无出口参数，但对PCjr在子功能80H~83H调用下，有：BH＝CRT页寄存器，BL＝CPU页寄存器</p><h4 id="7-、功能06H和07H"><a href="#7-、功能06H和07H" class="headerlink" title="(7)、功能06H和07H"></a>(7)、功能06H和07H</h4><p>功能描述：初始化屏幕或滚屏<br>入口参数：AH＝06H——向上滚屏，07H——向下滚屏<br>AL＝滚动行数(0——清窗口)<br>BH＝空白区域的缺省属性<br>(CH、CL)＝窗口的左上角位置(Y坐标，X坐标)<br>(DH、DL)＝窗口的右下角位置(Y坐标，X坐标)<br>出口参数：无</p><h4 id="8-、功能08H"><a href="#8-、功能08H" class="headerlink" title="(8)、功能08H"></a>(8)、功能08H</h4><p>功能描述：读光标处的字符及其属性<br>入口参数：AH＝08H<br>BH＝显示页码<br>出口参数：AH＝属性<br>AL＝字符</p><h4 id="9-、功能09H"><a href="#9-、功能09H" class="headerlink" title="(9)、功能09H"></a>(9)、功能09H</h4><p>功能描述：在当前光标处按指定属性显示字符<br>入口参数：AH＝09H<br>AL＝字符<br>BH＝显示页码<br>BL＝属性(文本模式)或颜色(图形模式)<br>CX＝重复输出字符的次数<br>出口参数：无</p><h4 id="10-、功能0AH"><a href="#10-、功能0AH" class="headerlink" title="(10)、功能0AH"></a>(10)、功能0AH</h4><p>功能描述：在当前光标处按原有属性显示字符<br>入口参数：AH＝0AH<br>AL＝字符<br>BH＝显示页码<br>BL＝颜色(图形模式，仅适用于PCjr)<br>CX＝重复输出字符的次数<br>出口参数：无</p><h4 id="11-、功能0BH"><a href="#11-、功能0BH" class="headerlink" title="(11)、功能0BH"></a>(11)、功能0BH</h4><p>功能描述：设置调色板、背景色或边框<br>入口参数：AH＝0BH<br>设置颜色：BH＝00H，BL＝颜色<br>选择调色板：BH＝01H，BL＝调色板(320×200、4种颜色的图形模式)<br>出口参数：无</p><h4 id="12-、功能0CH"><a href="#12-、功能0CH" class="headerlink" title="(12)、功能0CH"></a>(12)、功能0CH</h4><p>功能描述：写图形象素<br>入口参数：AH＝0CH<br>AL＝象素值<br>BH＝页码<br>(CX、DX)＝图形坐标列(X)、行(Y)<br>出口参数：无</p><h4 id="13-、功能0DH"><a href="#13-、功能0DH" class="headerlink" title="(13)、功能0DH"></a>(13)、功能0DH</h4><p>功能描述：读图形象素<br>入口参数：AH＝0DH<br>BH＝页码<br>(CX、DX)＝图形坐标列(X)、行(Y)<br>出口参数：AL＝象素值</p><h4 id="14-、功能0EH"><a href="#14-、功能0EH" class="headerlink" title="(14)、功能0EH"></a>(14)、功能0EH</h4><p>功能描述：在Teletype模式下显示字符<br>入口参数：AH＝0EH<br>AL＝字符<br>BH＝页码<br>BL＝前景色(图形模式)<br>出口参数：无</p><h4 id="15-、功能0FH"><a href="#15-、功能0FH" class="headerlink" title="(15)、功能0FH"></a>(15)、功能0FH</h4><p>功能描述：读取显示器模式<br>入口参数：AH＝0FH<br>出口参数：AH＝屏幕字符的列数<br>AL＝显示模式(参见功能00H中的说明)<br>BH＝页码</p><h4 id="16-、功能10H"><a href="#16-、功能10H" class="headerlink" title="(16)、功能10H"></a>(16)、功能10H</h4><p>功能描述：颜色中断。其子功能说明如下： 功能号　子功能名称功能号　子功能名称<br>00H — 设置调色板寄存器01H — 设置边框颜色<br>02H — 设置调色板和边框03H — 触发闪烁&#x2F;亮显位<br>07H — 读取调色板寄存器08H — 读取边框颜色<br>09H — 读取调色板和边框10H — 设置颜色寄存器<br>12H — 设置颜色寄存器块13H — 设置颜色页状态<br>15H — 读取颜色寄存器17H — 读取颜色寄存器块<br>1AH — 读取颜色页状态1BH — 设置灰度值</p><h4 id="17-、功能11H"><a href="#17-、功能11H" class="headerlink" title="(17)、功能11H"></a>(17)、功能11H</h4><p>功能描述：字体中断。其子功能说明如下： 子功能号子功能名称<br>00H装入用户字体和可编程控制器<br>10H装入用户字体和可编程控制器<br>01H装入8×14 ROM字体和可编程控制器<br>11H装入8×14 ROM字体和可编程控制器<br>02H装入8×8 ROM字体和可编程控制器<br>12H装入8×8 ROM字体和可编程控制器<br>03H设置块指示器<br>04H装入8×16 ROM字体和可编程控制器<br>14H装入8×16 ROM字体和可编程控制器<br>20H设置INT 1Fh字体指针<br>21H为用户字体设置INT 43h<br>22H为8×14 ROM字体设置INT 43H<br>23H为8×8 ROM字体设置INT 43H<br>24H为8×16 ROM字体设置INT 43H<br>30H读取字体信息</p><h4 id="18-、功能12H"><a href="#18-、功能12H" class="headerlink" title="(18)、功能12H"></a>(18)、功能12H</h4><p>功能描述：显示器的配置中断。其子功能说明如下： 功能号 功能名称 功能号 功能名称<br>10H — 读取配置信息20H — 选择屏幕打印<br>30H — 设置扫描行31H — 允许&#x2F;禁止装入缺省调色板<br>32H — 允许&#x2F;禁止显示33H — 允许&#x2F;禁止灰度求和<br>34H — 允许&#x2F;禁止光标模拟35H — 切换活动显示<br>36H — 允许&#x2F;禁止屏幕刷新</p><h4 id="19-、功能13H"><a href="#19-、功能13H" class="headerlink" title="(19)、功能13H"></a>(19)、功能13H</h4><p>功能描述：在Teletype模式下显示字符串<br>入口参数：AH＝13H<br>BH＝页码<br>BL＝属性(若AL&#x3D;00H或01H)<br>CX＝显示字符串长度<br>(DH、DL)＝坐标(行、列)<br>ES:BP＝显示字符串的地址 AL＝显示输出方式<br>0——字符串中只含显示字符，其显示属性在BL中。显示后，光标位置不变<br>1——字符串中只含显示字符，其显示属性在BL中。显示后，光标位置改变<br>2——字符串中含显示字符和显示属性。显示后，光标位置不变<br>3——字符串中含显示字符和显示属性。显示后，光标位置改变<br>出口参数：无</p><h4 id="20-、功能1AH"><a href="#20-、功能1AH" class="headerlink" title="(20)、功能1AH"></a>(20)、功能1AH</h4><p>功能描述：读取&#x2F;设置显示组合编码，仅PS&#x2F;2有效，在此从略</p><h4 id="21-、功能1BH"><a href="#21-、功能1BH" class="headerlink" title="(21)、功能1BH"></a>(21)、功能1BH</h4><p>功能描述：读取功能&#x2F;状态信息，仅PS&#x2F;2有效，在此从略</p><h4 id="22-、功能1CH"><a href="#22-、功能1CH" class="headerlink" title="(22)、功能1CH"></a>(22)、功能1CH</h4><p>功能描述：保存&#x2F;恢复显示器状态，仅PS&#x2F;2有效，在此从略</p><h3 id="2、直接磁盘服务-Direct-Disk-Service——INT-13H"><a href="#2、直接磁盘服务-Direct-Disk-Service——INT-13H" class="headerlink" title="2、直接磁盘服务(Direct Disk Service——INT 13H)"></a><strong>2、直接磁盘服务(Direct Disk Service——INT 13H)</strong></h3><p>00H —磁盘系统复位0EH —读扇区缓冲区<br>01H —读取磁盘系统状态0FH —写扇区缓冲区<br>02H —读扇区10H —读取驱动器状态<br>03H —写扇区11H —校准驱动器<br>04H —检验扇区12H —控制器RAM诊断<br>05H —格式化磁道13H —控制器驱动诊断<br>06H —格式化坏磁道14H —控制器内部诊断<br>07H —格式化驱动器15H —读取磁盘类型<br>08H —读取驱动器参数16H —读取磁盘变化状态<br>09H —初始化硬盘参数17H —设置磁盘类型<br>0AH —读长扇区18H —设置格式化媒体类型<br>0BH —写长扇区19H —磁头保护<br>0CH —查寻1AH —格式化ESDI驱动器<br>0DH —硬盘系统复位</p><h4 id="1-、功能00H-1"><a href="#1-、功能00H-1" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：磁盘系统复位<br>入口参数：AH＝00H<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="2-、功能01H-1"><a href="#2-、功能01H-1" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：读取磁盘系统状态<br>入口参数：AH＝01H<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>出口参数：AH＝00H，AL＝状态代码，其定义如下：<br>00H — 无错 01H — 非法命令<br>02H — 地址目标未发现03H — 磁盘写保护(软盘)<br>04H — 扇区未发现05H — 复位失败(硬盘)<br>06H — 软盘取出(软盘)07H — 错误的参数表(硬盘)<br>08H — DMA越界(软盘)09H — DMA超过64K界限<br>0AH — 错误的扇区标志(硬盘)0BH — 错误的磁道标志(硬盘)<br>0CH — 介质类型未发现(软盘)0DH — 格式化时非法扇区号(硬盘)<br>0EH — 控制数据地址目标被发现(硬盘)0FH — DMA仲裁越界(硬盘)<br>10H — 不正确的CRC或ECC编码11H — ECC校正数据错(硬盘)<br>　CRC:Cyclic Redundancy Check code<br>　ECC:Error Checking &amp; Correcting code<br>20H — 控制器失败40H — 查找失败<br>80H — 磁盘超时(未响应)AAH — 驱动器未准备好(硬盘)<br>BBH — 未定义的错误(硬盘)CCH — 写错误(硬盘)<br>E0H — 状态寄存器错(硬盘)FFH — 检测操作失败(硬盘)</p><h4 id="3-、功能02H-1"><a href="#3-、功能02H-1" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：读扇区<br>入口参数：AH＝02H<br>AL＝扇区数<br>CH＝柱面<br>CL＝扇区<br>DH＝磁头<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，AH＝00H，AL＝传输的扇区数，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="4-、功能03H-1"><a href="#4-、功能03H-1" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：写扇区<br>入口参数：AH＝03H<br>AL＝扇区数<br>CH＝柱面<br>CL＝扇区<br>DH＝磁头<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，AH＝00H，AL＝传输的扇区数，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="5-、功能04H-1"><a href="#5-、功能04H-1" class="headerlink" title="(5)、功能04H"></a>(5)、功能04H</h4><p>功能描述：检验扇区<br>入口参数：AH＝04H<br>AL＝扇区数<br>CH＝柱面<br>CL＝扇区<br>DH＝磁头<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，AH＝00H，AL＝被检验的扇区数，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="6-、功能05H-1"><a href="#6-、功能05H-1" class="headerlink" title="(6)、功能05H"></a>(6)、功能05H</h4><p>功能描述：格式化磁道<br>入口参数：AH＝05H<br>AL＝交替(Interleave)<br>CH＝柱面<br>DH＝磁头<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>ES:BX＝地址域列表的地址<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="7-、功能06H"><a href="#7-、功能06H" class="headerlink" title="(7)、功能06H"></a>(7)、功能06H</h4><p>功能描述：格式化坏磁道<br>入口参数：AH＝06H<br>AL＝交替<br>CH＝柱面<br>DH＝磁头<br>DL＝80H~0FFH：硬盘<br>ES:BX＝地址域列表的地址<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="8-、功能07H"><a href="#8-、功能07H" class="headerlink" title="(8)、功能07H"></a>(8)、功能07H</h4><p>功能描述：格式化驱动器<br>入口参数：AH＝07H<br>AL＝交替<br>CH＝柱面<br>DL＝80H~0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="9-、功能08H"><a href="#9-、功能08H" class="headerlink" title="(9)、功能08H"></a>(9)、功能08H</h4><p>功能描述：读取驱动器参数<br>入口参数：AH＝08H<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>出口参数：CF＝1——操作失败，AH＝状态代码，参见功能号01H中的说明，否则， BL＝01H — 360K<br>＝02H — 1.2M<br>＝03H — 720K<br>＝04H — 1.44M<br>CH＝柱面数的低8位<br>CL的位7-6＝柱面数的该2位<br>CL的位5-0＝扇区数<br>DH＝磁头数<br>DL＝驱动器数<br>ES:DI＝磁盘驱动器参数表地址</p><h4 id="10-、功能09H"><a href="#10-、功能09H" class="headerlink" title="(10)、功能09H"></a>(10)、功能09H</h4><p>功能描述：初始化硬盘参数<br>入口参数：AH＝09H<br>DL＝80H~0FFH：硬盘(还有有关参数表问题，在此从略)<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="11-、功能0AH"><a href="#11-、功能0AH" class="headerlink" title="(11)、功能0AH"></a>(11)、功能0AH</h4><p>功能描述：读长扇区，每个扇区随带四个字节的ECC编码<br>入口参数：AH＝0AH<br>AL＝扇区数<br>CH＝柱面<br>CL＝扇区<br>DH＝磁头<br>DL＝80H~0FFH：硬盘<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，AH＝00H，AL＝传输的扇区数，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="12-、功能0BH"><a href="#12-、功能0BH" class="headerlink" title="(12)、功能0BH"></a>(12)、功能0BH</h4><p>功能描述：写长扇区，每个扇区随带四个字节的ECC编码<br>入口参数：AH＝0BH<br>AL＝扇区数<br>CH＝柱面<br>CL＝扇区<br>DH＝磁头<br>DL＝80H~0FFH：硬盘<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，AH＝00H，AL＝传输的扇区数，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="13-、功能0CH"><a href="#13-、功能0CH" class="headerlink" title="(13)、功能0CH"></a>(13)、功能0CH</h4><p>功能描述：查寻<br>入口参数：AH＝0CH<br>CH＝柱面的低8位<br>CL(7-6位)＝柱面的高2位<br>DH＝磁头<br>DL＝80H~0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="14-、功能0DH"><a href="#14-、功能0DH" class="headerlink" title="(14)、功能0DH"></a>(14)、功能0DH</h4><p>功能描述：硬盘系统复位<br>入口参数：AH＝0DH<br>DL＝80H~0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="15-、功能0EH"><a href="#15-、功能0EH" class="headerlink" title="(15)、功能0EH"></a>(15)、功能0EH</h4><p>功能描述：读扇区缓冲区<br>入口参数：AH＝0EH<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="16-、功能0FH"><a href="#16-、功能0FH" class="headerlink" title="(16)、功能0FH"></a>(16)、功能0FH</h4><p>功能描述：写扇区缓冲区<br>入口参数：AH＝0FH<br>ES:BX＝缓冲区的地址<br>出口参数：CF＝0——操作成功，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="17-、功能10H"><a href="#17-、功能10H" class="headerlink" title="(17)、功能10H"></a>(17)、功能10H</h4><p>功能描述：读取驱动器状态<br>入口参数：AH＝10H<br>DL＝80H~0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="18-、功能11H"><a href="#18-、功能11H" class="headerlink" title="(18)、功能11H"></a>(18)、功能11H</h4><p>功能描述：校准驱动器<br>入口参数：AH＝11H<br>DL＝80H~0FFH：硬盘<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="19-、功能12H"><a href="#19-、功能12H" class="headerlink" title="(19)、功能12H"></a>(19)、功能12H</h4><p>功能描述：控制器RAM诊断<br>入口参数：AH＝12H<br>出口参数：CF＝0——操作成功，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="20-、功能13H"><a href="#20-、功能13H" class="headerlink" title="(20)、功能13H"></a>(20)、功能13H</h4><p>功能描述：控制器驱动诊断<br>入口参数：AH＝13H<br>出口参数：CF＝0——操作成功，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="21-、功能14H"><a href="#21-、功能14H" class="headerlink" title="(21)、功能14H"></a>(21)、功能14H</h4><p>功能描述：控制器内部诊断<br>入口参数：AH＝14H<br>出口参数：CF＝0——操作成功，否则，AH＝状态代码，参见功能号01H中的说明</p><h4 id="22-、功能15H"><a href="#22-、功能15H" class="headerlink" title="(22)、功能15H"></a>(22)、功能15H</h4><p>功能描述：读取磁盘类型<br>入口参数：AH＝15H<br>DL＝驱动器，00H<del>7FH：软盘；80H</del>0FFH：硬盘<br>出口参数：CF＝1——操作失败，AH＝状态代码，参见功能号01H中的说明， 否则，AH＝00H — 未安装驱动器<br>＝01H — 无改变线支持的软盘驱动器<br>＝02H — 带有改变线支持的软盘驱动器<br>＝03H — 硬盘，CX:DX＝512字节的扇区数</p><h4 id="23-、功能16H"><a href="#23-、功能16H" class="headerlink" title="(23)、功能16H"></a>(23)、功能16H</h4><p>功能描述：读取磁盘变化状态<br>入口参数：AH＝16H<br>DL＝00H~7FH：软盘<br>出口参数：CF＝0——磁盘未改变，AH＝00H，否则，AH＝06H，参见功能号01H中的说明</p><h4 id="24-、功能17H"><a href="#24-、功能17H" class="headerlink" title="(24)、功能17H"></a>(24)、功能17H</h4><p>功能描述：设置磁盘类型<br>入口参数：AH＝17H<br>DL＝00H~7FH：软盘 AL＝00H — 未用<br>＝01H — 360K在360K驱动器中<br>＝02H — 360K在1.2M驱动器中<br>＝03H — 1.2M在1.2M驱动器中<br>＝04H — 720K在720K驱动器中<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态编码，参见功能号01H中的说明</p><h4 id="25-、功能18H"><a href="#25-、功能18H" class="headerlink" title="(25)、功能18H"></a>(25)、功能18H</h4><p>功能描述：设置格式化媒体类型<br>入口参数：AH＝18H<br>CH＝柱面数<br>CL＝每磁道的扇区数<br>DL＝00H~7FH：软盘<br>出口参数：CF＝0——操作成功，AH＝00H，ES:DI＝介质类型参数表地址，否则，AH＝状态编码，参见功能号01H中的说明</p><h4 id="26-、功能19H"><a href="#26-、功能19H" class="headerlink" title="(26)、功能19H"></a>(26)、功能19H</h4><p>功能描述：磁头保护，仅在PS&#x2F;2中有效，在此从略</p><h4 id="27-、功能1AH"><a href="#27-、功能1AH" class="headerlink" title="(27)、功能1AH"></a>(27)、功能1AH</h4><p>功能描述：格式化ESDI驱动器，仅在PS&#x2F;2中有效，在此从略</p><h3 id="3、串行口服务-Serial-Port-Service——INT-14H"><a href="#3、串行口服务-Serial-Port-Service——INT-14H" class="headerlink" title="3、串行口服务(Serial Port Service——INT 14H)"></a><strong>3、串行口服务(Serial Port Service——INT 14H)</strong></h3><p>00H —初始化通信口03H —读取通信口状态<br>01H —向通信口输出字符04H —扩充初始化通信口<br>02H —从通信口读入字符</p><h4 id="1-、功能00H-2"><a href="#1-、功能00H-2" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：初始化通信口<br>入口参数：AH＝00H<br>DX＝初始化通信口号(0＝COM1，1＝COM2，……)<br>AL＝初始化参数，参数的说明如下： 波特率奇偶位停止位字的位数<br>76543210<br>000 &#x3D; 110X0 &#x3D; None0 &#x3D; 1 bit10 &#x3D; 7 bits<br>001 &#x3D; 15001 &#x3D; Odd1 &#x3D; 2 bits11 &#x3D; 8 bits<br>010 &#x3D; 30011 &#x3D; Even<br>011 &#x3D; 600<br>100 &#x3D; 1200<br>101 &#x3D; 2400<br>110 &#x3D; 4800<br>111 &#x3D; 9600<br>对于PS&#x2F;2，可用INT 14H之功能04H和05H来初始化其通信速率大于9600。<br>出口参数：AH＝通信口状态，各状态位为1时的含义如下： 位7—超时<br>位6—传递移位寄存器为空<br>位5—传递保持寄存器为空<br>位4—发现终止位3—发现帧错误<br>位2—发现奇偶错<br>位1—发现越界错<br>位0—接受数据准备好<br>AL＝Modem状态<br>位7—接受单线信号诊断<br>位6—环指示器<br>位5—数据发送准备好<br>位4—清除数据，再发送位3—改变在接受线上的信号诊断<br>位2—后边界环指示器<br>位1—改变“数据准备好”状态<br>位0—改变“清除—发送”状态</p><h4 id="2-、功能01H-2"><a href="#2-、功能01H-2" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：向通信口输出字符<br>入口参数：AH＝01H<br>AL＝字符<br>DX＝初始化通信口号(0＝COM1，1＝COM2，……)<br>出口参数：AL的值不变<br>AH的位7＝0——操作成功，通信口状态，AH的位6~0是其状态位</p><h4 id="3-、功能02H-2"><a href="#3-、功能02H-2" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：从通信口读入字符<br>入口参数：AH＝02H<br>DX＝初始化通信口号(0＝COM1，1＝COM2，……)<br>出口参数：AL＝接受的字符<br>AH的位7＝0——操作成功，通信口状态，AH的位6~0是其状态位</p><h4 id="4-、功能03H-2"><a href="#4-、功能03H-2" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：读取通信口状态<br>入口参数：AH＝03H<br>DX＝初始化通信口号(0＝COM1，1＝COM2，……)<br>出口参数：AH＝通信口状态，AL＝Modem状态，参见功能号00H中的说明</p><h4 id="5-、功能04H-2"><a href="#5-、功能04H-2" class="headerlink" title="(5)、功能04H"></a>(5)、功能04H</h4><p>功能描述：扩充初始化通信口，仅在PS&#x2F;2中有效，在此从略</p><h3 id="4、杂项系统服务-Miscellaneous-System-Service——INT-15H"><a href="#4、杂项系统服务-Miscellaneous-System-Service——INT-15H" class="headerlink" title="**4、杂项系统服务(Miscellaneous System Service——INT 15H)"></a>**4、杂项系统服务(Miscellaneous System Service——INT 15H)</h3><p>**00H —开盒式磁带机马达85H —系统请求(SysReq)键<br>01H —关盒式磁带机马达86H —延迟<br>02H —读盒式磁带机87H —移动扩展内存块<br>03H —写盒式磁带机88H —读取扩展内存大小<br>0FH —格式化ESDI驱动器定期中断89H —进入保护模式<br>21H —读&#x2F;写自检(POST)错误记录90H —设备等待<br>4FH —键盘截听91H —设备加电自检<br>80H —设备打开C0H —读取系统环境<br>81H —设备关闭C1H —读取扩展BIOS数据区地址<br>82H —进程终止C2H —鼠标图形<br>83H —事件等待C3H —设置WatcHdog超时<br>84H —读游戏杆C4H —可编程选项选择</p><h4 id="1-、功能00H-3"><a href="#1-、功能00H-3" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：开盒式磁带机马达<br>入口参数：AH＝00H<br>出口参数：CF＝0——操作成功，否则，AH＝状态(86H，若未安装盒式磁带机)</p><h4 id="2-、功能01H-3"><a href="#2-、功能01H-3" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：关盒式磁带机马达<br>入口参数：AH＝01H<br>出口参数：CF＝0——操作成功，否则，AH＝状态(86H，若未安装盒式磁带机)</p><h4 id="3-、功能02H-3"><a href="#3-、功能02H-3" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：读盒式磁带机<br>入口参数：AH＝02H<br>CX＝读入的字节数<br>ES:BX＝存放数据的缓冲区地址<br>出口参数：CF＝0——操作成功，DX＝实际读入的字节数，ES:BX指向最后一个字节的后面地址，否则，AH＝状态码，其值含义如下： 01H<br>—— CRC校验码错80H —— 非法命令<br>02H —— 位信号混乱86H —— 未安装盒式磁带机<br>04H —— 无发现数据</p><h4 id="4-、功能03H-3"><a href="#4-、功能03H-3" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：写盒式磁带机<br>入口参数：AH＝03H<br>CX＝要写入的字节数<br>ES:BX＝已存数据的缓冲区地址<br>出口参数：CF＝0——操作成功，CX＝00H，ES:BX指向最后一个字节的后面地址，否则，AH＝状态码，其值含义如下： 80H ——<br>非法命令86H —— 未安装盒式磁带机</p><h4 id="5-、功能0FH"><a href="#5-、功能0FH" class="headerlink" title="(5)、功能0FH"></a>(5)、功能0FH</h4><p>功能描述：格式化ESDI驱动器定期中断，仅在PS&#x2F;2中有效，在此从略</p><h4 id="6-、功能21H"><a href="#6-、功能21H" class="headerlink" title="(6)、功能21H"></a>(6)、功能21H</h4><p>功能描述：读&#x2F;写自检(POST)错误记录，仅在PS&#x2F;2中有效，在此从略</p><h4 id="7-、功能4FH"><a href="#7-、功能4FH" class="headerlink" title="(7)、功能4FH"></a>(7)、功能4FH</h4><p>功能描述：键盘截听，仅在PS&#x2F;2中有效，在此从略</p><h4 id="8-、功能80H"><a href="#8-、功能80H" class="headerlink" title="(8)、功能80H"></a>(8)、功能80H</h4><p>功能描述：打开设备<br>入口参数：AH＝80H<br>BX＝设备号<br>CX＝进程号<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态码</p><h4 id="9-、功能81H"><a href="#9-、功能81H" class="headerlink" title="(9)、功能81H"></a>(9)、功能81H</h4><p>功能描述：关闭设备<br>入口参数：AH＝81H<br>BX＝设备号<br>CX＝进程号<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态码</p><h4 id="10-、功能82H"><a href="#10-、功能82H" class="headerlink" title="(10)、功能82H"></a>(10)、功能82H</h4><p>功能描述：进程终止<br>入口参数：AH＝81H<br>BX＝进程号<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态码</p><h4 id="11-、功能83H"><a href="#11-、功能83H" class="headerlink" title="(11)、功能83H"></a>(11)、功能83H</h4><p>功能描述：事件等待<br>入口参数：AH＝83H 若需要事件等待，则：AL＝00H<br>CX:DX＝千分秒<br>ES:BX＝信号量字节的地址<br>否则，调用参数为AL＝01H<br>出口参数：若调用时，AL＝00H，操作成功——CF＝0，否则，CF＝1</p><h4 id="12-、功能84H"><a href="#12-、功能84H" class="headerlink" title="(12)、功能84H"></a>(12)、功能84H</h4><p>功能描述：读游戏杆<br>入口参数：AH＝84H<br>DX＝00H——读取开关设置<br>　＝01H——读取阻力输入<br>出口参数：CF＝1H——操作失败，否则，<br>　DX＝00H时，AL＝开关设置(位7～4)<br>　DX＝01H时，AX、BX、CX和DX分别为A(x)、A(y)、B(x)和B(y)的值</p><h4 id="13-、功能85H"><a href="#13-、功能85H" class="headerlink" title="(13)、功能85H"></a>(13)、功能85H</h4><p>功能描述：系统请求(SysReq)键<br>入口参数：AH＝85H<br>AL＝00H——键按下<br>　＝01H——键放开<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态码</p><h4 id="14-、功能86H"><a href="#14-、功能86H" class="headerlink" title="(14)、功能86H"></a>(14)、功能86H</h4><p>功能描述：延迟<br>入口参数：AH＝86H<br>CX:DX＝千分秒<br>出口参数：CF＝0——操作成功，AH＝00H</p><h4 id="15-、功能87H"><a href="#15-、功能87H" class="headerlink" title="(15)、功能87H"></a>(15)、功能87H</h4><p>功能描述：从常规内存和扩展内存之间移动扩展内存块<br>入口参数：AH＝87H<br>CX＝移动的字数<br>ES:SI＝GDT(Global Descriptor Table)的地址，其结构定义如下： 偏移量存储的信息<br>00h-0Fh保留，但现全为0<br>10h-11h段的长度(2CX-1或更大)<br>12h-14h24位源地址<br>15h访问权限字节(其值为93h)<br>16h-17h保留，但现全为0<br>18h-19h段的长度(2CX-1或更大)<br>1Ah-1Ch 24位目标源地址<br>1Dh访问权限字节(其值为93h)<br>1Eh-2Fh保留，但现全为0<br>出口参数：CF＝0——操作成功，AH＝00H，否则，AH＝状态码，其含义如下：<br>　　01H —— RAM奇偶错<br>　　02H —— 异常中断错<br>　　03H —— 20号线门地址失败</p><h4 id="16-、功能88H"><a href="#16-、功能88H" class="headerlink" title="(16)、功能88H"></a>(16)、功能88H</h4><p>功能描述：读取扩展内存大小<br>入口参数：AH＝88H<br>出口参数：AX＝扩展内存字节数(以K为单位)</p><h4 id="17-、功能89H"><a href="#17-、功能89H" class="headerlink" title="(17)、功能89H"></a>(17)、功能89H</h4><p>功能描述：进入保护模式，CPU从实模式进入保护模式<br>入口参数：AH＝89H<br>BH＝IRQ0的中断号<br>BL＝IRQ8的中断号<br>ES:SI＝GDT的地址(参见功能号87H)<br>出口参数：CF＝1——操作失败，AH＝0FFH，否则，AH＝00H，CS、DS、ES和SS都是用户定义的选择器</p><h4 id="18-、功能90H"><a href="#18-、功能90H" class="headerlink" title="(18)、功能90H"></a>(18)、功能90H</h4><p>功能描述：设备等待<br>入口参数：AH＝90H AL＝驱动器类型，具体的驱动器类型定义如下：<br>＝00H<del>7FH——串行再重用设备<br>＝80H</del>0BFH——可重入式设备<br>＝0C0H<del>0FFH——等待访问设备，没有自检功能<br>00h — 磁盘<br>02h — 键盘<br>80h — 网络<br>FDh — 软盘马达启动01h — 软盘<br>03h — 点设备(Pointing Device)<br>FCh — 硬盘复位<br>FEh — 打印机<br>ES:BX＝对驱动器类型80H</del>0FFH的请求块地址<br>出口参数：CF＝1——操作失败，否则，AH＝00H</p><h4 id="19-、功能91H"><a href="#19-、功能91H" class="headerlink" title="(19)、功能91H"></a>(19)、功能91H</h4><p>功能描述：设备加电自检<br>入口参数：AH＝91H<br>AL＝00H<del>7FH——串行再重用设备<br>　＝80H</del>0BFH——可重入式设备<br>出口参数：AH＝00H</p><h4 id="20-、功能0C0H"><a href="#20-、功能0C0H" class="headerlink" title="(20)、功能0C0H"></a>(20)、功能0C0H</h4><p>功能描述：读取系统环境<br>入口参数：AH＝0C0H<br>出口参数：ES:BX＝配置表地址，配置表的定义如下： 偏移量含义说明<br>00h-01h表的大小(字节数)<br>02h系统模型<br>03h系统子模型<br>04hBIOS版本号<br>05h配置标志，其各位为1时的说明如下：<br>　　位7—DMA通道3使用<br>　　位6—存在从属8259<br>　　位5—实时时钟有效<br>　　位4—键盘截听有效<br>　　位3—等待外部事件有效<br>　　位2—扩展BIOS数据区<br>　　位1—微通道设施<br>　　位0—保留<br>06h-09h保留</p><h4 id="21-、功能C1H"><a href="#21-、功能C1H" class="headerlink" title="(21)、功能C1H"></a>(21)、功能C1H</h4><p>功能描述：读取扩展BIOS数据区地址，仅在PS&#x2F;2中有效，在此从略</p><h4 id="22-、功能C2H"><a href="#22-、功能C2H" class="headerlink" title="(22)、功能C2H"></a>(22)、功能C2H</h4><p>功能描述：鼠标图形，仅在PS&#x2F;2中有效，在此从略</p><h4 id="23-、功能C3H"><a href="#23-、功能C3H" class="headerlink" title="(23)、功能C3H"></a>(23)、功能C3H</h4><p>功能描述：设置WatcHdog超时，仅在PS&#x2F;2中有效，在此从略</p><h4 id="24-、功能C4H"><a href="#24-、功能C4H" class="headerlink" title="(24)、功能C4H"></a>(24)、功能C4H</h4><p>功能描述：可编程选项选择，仅在PS&#x2F;2中有效，在此从略</p><h3 id="5、键盘服务-Keyboard-Service——INT-16H"><a href="#5、键盘服务-Keyboard-Service——INT-16H" class="headerlink" title="5、键盘服务(Keyboard Service——INT 16H)"></a><strong>5、键盘服务(Keyboard Service——INT 16H)</strong></h3><p>00H、10H —从键盘读入字符03H —设置重复率<br>01H、11H —读取键盘状态04H —设置键盘点击<br>02H, 12H —读取键盘标志05H —字符及其扫描码进栈</p><h4 id="1-、功能00H和10H"><a href="#1-、功能00H和10H" class="headerlink" title="(1)、功能00H和10H"></a>(1)、功能00H和10H</h4><p>功能描述：从键盘读入字符<br>入口参数：AH＝00H——读键盘<br>＝10H——读扩展键盘，可根据0000:0496H单元的内容判断：扩展键盘是否有效<br>出口参数：AH＝键盘的扫描码<br>AL＝字符的ASCII码</p><h4 id="2-、功能01H和11H"><a href="#2-、功能01H和11H" class="headerlink" title="(2)、功能01H和11H"></a>(2)、功能01H和11H</h4><p>功能描述：读取键盘状态<br>入口参数：AH＝01H——检查普通键盘<br>＝11H——检查扩展键盘<br>出口参数：ZF＝1——无字符输入，否则，AH＝键盘的扫描码，AL＝ASCII码。</p><h4 id="3-、功能02H和12H"><a href="#3-、功能02H和12H" class="headerlink" title="(3)、功能02H和12H"></a>(3)、功能02H和12H</h4><p>功能描述：读取键盘标志<br>入口参数：AH＝02H——普通键盘的移位标志<br>＝12H——扩展键盘的移位标志<br>出口参数：AL＝键盘标志(02H和12H都有效)，其各位之值为1时的含义如下： 位7—INS开状态位3—ALT键按下<br>位6—CAPS LOCK开状态位2—CTRL键按下<br>位5—NUM LOCK开状态位1—左SHIFT键按下<br>位4—SCROLL LOCK开状态位0—右SHIFT键按下<br>AH＝扩展键盘的标志(12H有效)，其各位之值为1时的含义如下：<br>位7—SysReq键按下位3—右ALT键按下<br>位6—CAPS LOCK键按下位2—右CTRL键按下<br>位5—NUM LOCK键按下位1—左ALT键按下<br>位4—SCROLL键按下位0—左CTRL键按下</p><h4 id="4-、功能03H-4"><a href="#4-、功能03H-4" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：设置重复率<br>入口参数：AH＝03H 对于PC&#x2F;AT和PS&#x2F;2：AL＝05H<br>BH＝重复延迟<br>BL＝重复率<br>对于PCjr：AL＝00H——装入缺省的速率和延迟<br>＝01H——增加初始延迟<br>＝02H——重复频率降低一半<br>＝03H——增加延迟和降低一半重复频率<br>＝04H——关闭键盘重复功能<br>出口参数：无</p><h4 id="5-、功能04H-3"><a href="#5-、功能04H-3" class="headerlink" title="(5)、功能04H"></a>(5)、功能04H</h4><p>功能描述：设置键盘点击<br>入口参数：AH＝04H AL＝00H——关闭键盘点击功能<br>＝01H——打开键盘点击功能<br>出口参数：无</p><h4 id="6-、功能05H-2"><a href="#6-、功能05H-2" class="headerlink" title="(6)、功能05H"></a>(6)、功能05H</h4><p>功能描述：字符及其扫描码进栈<br>入口参数：AH＝05H<br>CH＝字符的描述码<br>CL＝字符的ASCII码<br>出口参数：CF＝1——操作成功，AL＝00H，否则，AL＝01H</p><h3 id="6、并行口服务-Parallel-Port-Service——INT-17H"><a href="#6、并行口服务-Parallel-Port-Service——INT-17H" class="headerlink" title="**6、并行口服务(Parallel Port Service——INT 17H)"></a>**6、并行口服务(Parallel Port Service——INT 17H)</h3><p>**00H —向打印机输出字符<br>01H —初始化打印机端口<br>02H —读取打印机状态</p><h4 id="1-、功能00H-4"><a href="#1-、功能00H-4" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：向打印机输出字符<br>入口参数：AH＝00H<br>AL＝输出的字符<br>DX＝打印机号(0—LPT1，1—LPT2，2—LPT3，……)<br>出口参数：AH＝打印机状态。其各位为1时的含义如下： 位7—打印机空闲 位3—I&#x2F;O错误<br>位6—打印机响应位2—保留<br>位5—无纸位1—保留<br>位4—打印机被选位0—打印机超时</p><h4 id="2-、功能01H-4"><a href="#2-、功能01H-4" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：初始化打印机端口<br>入口参数：AH＝01H<br>DX＝打印机号(0—LPT1，1—LPT2，2—LPT3，……)<br>出口参数：AH＝打印机状态。各位定义如下功能00H所示</p><h4 id="3-、功能02H-4"><a href="#3-、功能02H-4" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：读取打印机状态<br>入口参数：AH＝02H<br>DX＝打印机号(0—LPT1，1—LPT2，2—LPT3，……)<br>出口参数：AH＝打印机状态。各位定义如下功能00H所示</p><h3 id="7、时钟服务-Clock-Service——INT-1AH"><a href="#7、时钟服务-Clock-Service——INT-1AH" class="headerlink" title="7、时钟服务(Clock Service——INT 1AH)"></a><strong>7、时钟服务(Clock Service——INT 1AH)</strong></h3><p>00H —读取时钟“滴答”计数06H —设置闹钟<br>01H —设置时钟“滴答”计数07H —闹钟复位<br>02H —读取时间0AH —读取天数计数<br>03H —设置时间0BH —设置天数计数<br>04H —读取日期 80H —设置声音源信息<br>05H —设置日期</p><h4 id="1-、功能00H-5"><a href="#1-、功能00H-5" class="headerlink" title="(1)、功能00H"></a>(1)、功能00H</h4><p>功能描述：读取时钟“滴答”计数<br>入口参数：AH＝00H<br>出口参数：AL＝00H——未过午夜，否则，表示已过午夜<br>CX:DX＝时钟“滴答”计数</p><h4 id="2-、功能01H-5"><a href="#2-、功能01H-5" class="headerlink" title="(2)、功能01H"></a>(2)、功能01H</h4><p>功能描述：设置时钟“滴答”计数<br>入口参数：AH＝01H<br>CX:DX＝时钟“滴答”计数<br>出口参数：无</p><h4 id="3-、功能02H-5"><a href="#3-、功能02H-5" class="headerlink" title="(3)、功能02H"></a>(3)、功能02H</h4><p>功能描述：读取时间<br>入口参数：AH＝02H<br>出口参数：CH＝BCD码格式的小时<br>CL＝BCD码格式的分钟<br>DH＝BCD码格式的秒<br>DL＝00H——标准时间，否则，夏令时<br>CF＝0——时钟在走，否则，时钟停止</p><h4 id="4-、功能03H-5"><a href="#4-、功能03H-5" class="headerlink" title="(4)、功能03H"></a>(4)、功能03H</h4><p>功能描述：设置时间<br>入口参数：AH＝03H<br>CH＝BCD码格式的小时<br>CL＝BCD码格式的分钟<br>DH＝BCD码格式的秒<br>DL＝00H——标准时间，否则，夏令时<br>出口参数：无</p><h4 id="5-、功能04H-4"><a href="#5-、功能04H-4" class="headerlink" title="(5)、功能04H"></a>(5)、功能04H</h4><p>功能描述：读取日期<br>入口参数：AH＝04H<br>出口参数：CH＝BCD码格式的世纪<br>CL＝BCD码格式的年<br>DH＝BCD码格式的月<br>DL＝BCD码格式的日<br>CF＝0——时钟在走，否则，时钟停止</p><h4 id="6-、功能05H-3"><a href="#6-、功能05H-3" class="headerlink" title="(6)、功能05H"></a>(6)、功能05H</h4><p>功能描述：设置日期<br>入口参数：AH＝05H<br>CH＝BCD码格式的世纪<br>CL＝BCD码格式的年<br>DH＝BCD码格式的月<br>DL＝BCD码格式的日<br>出口参数：无</p><h4 id="7-、功能06H-1"><a href="#7-、功能06H-1" class="headerlink" title="(7)、功能06H"></a>(7)、功能06H</h4><p>功能描述：设置闹钟<br>入口参数：AH＝06H<br>CH＝BCD码格式的小时<br>CL＝BCD码格式的分钟<br>DH＝BCD码格式的秒<br>出口参数：CF＝０——操作成功，否则，闹钟已设置或时钟已停止</p><h4 id="8-、功能07H-1"><a href="#8-、功能07H-1" class="headerlink" title="(8)、功能07H"></a>(8)、功能07H</h4><p>功能描述：闹钟复位<br>入口参数：AH＝07H<br>出口参数：无</p><h4 id="9-、功能0AH"><a href="#9-、功能0AH" class="headerlink" title="(9)、功能0AH"></a>(9)、功能0AH</h4><p>功能描述：读取天数计数，仅在PS&#x2F;2有效，在此从略</p><h4 id="10-、功能0BH"><a href="#10-、功能0BH" class="headerlink" title="(10)、功能0BH"></a>(10)、功能0BH</h4><p>功能描述：设置天数计数，仅在PS&#x2F;2有效，在此从略</p><h4 id="11-、功能80H"><a href="#11-、功能80H" class="headerlink" title="(11)、功能80H"></a>(11)、功能80H</h4><p>功能描述：设置声音源信息<br>入口参数：AH＝80H<br>AL＝声音源<br>＝00H——8253可编程计时器，通道2<br>＝01H——盒式磁带输入<br>＝02H——I&#x2F;O通道上的”Audio In”<br>＝03H——声音产生芯片<br>出口参数：无</p><h3 id="8、直接系统服务-Direct-System-Service"><a href="#8、直接系统服务-Direct-System-Service" class="headerlink" title="**8、直接系统服务(Direct System Service)"></a>**8、直接系统服务(Direct System Service)</h3><p>**INT 00H —“0”作除数<br>INT 01H —单步中断<br>INT 02H —非屏蔽中断(NMI)<br>INT 03H —断点中断<br>INT 04H —算术溢出错误<br>INT 05H —打印屏幕和BOUND越界<br>INT 06H —非法指令错误<br>INT 07H —处理器扩展无效<br>INT 08H —时钟中断<br>INT 09H —键盘输入<br>INT 0BH —通信口(COM2:)<br>INT 0CH —通信口(COM1:)<br>INT 0EH —磁盘驱动器输入&#x2F;输出<br>INT 11H —读取设备配置<br>INT 12H —读取常规内存大小(返回值AX为内存容量，以K为单位)<br>INT 18H —ROM BASIC<br>INT 19H —重启动系统<br>INT 1BH —CTRL+BREAK处理程序<br>INT 1CH —用户时钟服务<br>INT 1DH —指向显示器参数表指针<br>INT 1EH —指向磁盘驱动器参数表指针<br>INT 1FH —指向图形字符模式表指针</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BIOS中断&quot;&gt;&lt;a href=&quot;#BIOS中断&quot; class=&quot;headerlink&quot; title=&quot;BIOS中断&quot;&gt;&lt;/a&gt;BIOS中断&lt;/h1&gt;&lt;h2 id=&quot;一-BIOS中断大全&quot;&gt;&lt;a href=&quot;#一-BIOS中断大全&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>汇编学习</title>
    <link href="http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/80x86%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2023/06/07/re/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0/80x86%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-06-07T05:46:58.142Z</published>
    <updated>2023-06-07T05:47:24.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="80x86处理器的工作模式"><a href="#80x86处理器的工作模式" class="headerlink" title="80x86处理器的工作模式"></a>80x86处理器的工作模式</h1><h2 id="一、三种工作模式"><a href="#一、三种工作模式" class="headerlink" title="一、三种工作模式"></a>一、三种工作模式</h2><p>80386以后的处理器有3种工作模式</p><p>实模式</p><p>保护模式</p><p>虚拟8086模式</p><p>实模式和虚拟8086模式，是为了向下兼容而设置的。而保护模式是我们的主角，（Windows也是在保护模式下），是我们现代系统实际上的工作模式。</p><p>只有在保护模式下，32位CPU的寻址才能达到4GB的地址空间（地址空间就是CPU的视野，为什么是4GB捏，2^32正好是4GB，也就是说CPU单靠偏离1ip就可以寻址到4GB的内存空间，可以看到4GB的内容），同时，也能实现多任务、内存分页管理和优先级保护等先进的机制。</p><h2 id="二、Windows7的启动过程"><a href="#二、Windows7的启动过程" class="headerlink" title="二、Windows7的启动过程"></a>二、Windows7的启动过程</h2><h3 id="1-开启电源"><a href="#1-开启电源" class="headerlink" title="1.开启电源"></a>1.开启电源</h3><p>计算机系统将进行加电自检（POST）。如果通过，之后BIOS会读取主引导记录（MBR）——被标记为启动设备的硬盘的首扇区，并传送被Windows7建立的控制编码给MBR。</p><p>这里插一句，有一种病毒叫做引导型病毒，就是利用MBR，修改MBR记录使病毒在系统之前加载</p><h4 id="（1）-MBR"><a href="#（1）-MBR" class="headerlink" title="（1）.MBR"></a>（1）.MBR</h4><p>什么是MBR，MBR是一个存储区，它位于硬盘0磁道的第一个扇区，就是说硬盘读取的第一个位置，它的大小为512字节，里面存放有系统的加载信息、各个分区的信息以及它们的偏移地址和各个分区的状态</p><p>MBR可以分为两个部分</p><h5 id="lt-1-gt-第一部分"><a href="#lt-1-gt-第一部分" class="headerlink" title="&lt;1&gt;.第一部分"></a>&lt;1&gt;.第一部分</h5><p>pre-boot区（预启动区），占446字节。</p><h5 id="lt-2-gt-第二个部分"><a href="#lt-2-gt-第二个部分" class="headerlink" title="&lt;2&gt;.第二个部分"></a>&lt;2&gt;.第二个部分</h5><p>Partition table区（分区表），占66个字节（其实是64个，最后面是55 AA两个标志位）</p><p>64个字节分成4个部分，每一个分区占了16个字节</p><p>以前（上古时期）经常听人说，一个硬盘只能分四个主分区就是这个原因，MBR里面只能存放四个主分区，可以分更多盘，是因为有扩展分区和逻辑分区存在</p><p>该区相当于一个小程序，作用是判断哪个分区被标记为活动分区，然后去读取那个分区的启动区，并运行该区中的代码。</p><hr><p>注：可以用WinHex查看，WinHex常用来恢复硬盘数据</p><p>我试过了，笔记找不回来了QAQ</p><p>offset——硬盘的偏移基址，从0开始，FA EB开头，512字节，以55 AA结尾。</p><p>主板加载完BIOS后，会检查MBR的最后两个字节是不是55 AA</p><p>如果不是55 AA就会报错（找不到有效的分区表）。</p><p>如果是55 AA就会开始读取</p><p>前面的446字节是主引导区，记录的是后面64字节的内容</p><p>MBR不属于任何一个操作系统，也不能用操作系统提供的磁盘操作命令来读取它。因为CPU的权限在BIOS，CPU是通过运行BIOS的代码来实现检查机制的，BIOS的最后会跳到MBR分区，所以这时候它可以执行ROM-BIOS的中断指令</p><p>我们可以用ROM-BIOS中提供的INT13H中断的2号功能来读出该扇区的内容（我不到这是什么，是大佬说的，记下来先，以后查查）</p><h3 id="2-启动菜单的生成"><a href="#2-启动菜单的生成" class="headerlink" title="2.启动菜单的生成"></a>2.启动菜单的生成</h3><p>生成MBR索引到了Windows菜单的生产程序，CPU的权利赋予到了Windows系统</p><p>Windows启动管理器读取“启动配置数据存储”（Boot Confi guration Data store）中的信息。此信息包含已被安装在计算机上的所有操作系统的配置信息。并用以生成启动菜单。</p><p>当在启动菜单选择下列操作时：</p><p>如果选择的时Windows7，Windows启动管理器（Windows Boot Manager）运行%SystemRoot%\System32文件夹中的os loader——Winload.exe</p><p>这就是启动过程（这个时候还是在黑屏）</p><p>如果选择的是自休眠状态恢复Windows7，那么启动管理器将装载Winresume.exe并恢复您先前的使用环境</p><p>如果在启动菜单中选择的是早期的Windows版本，启动管理器将定位系统安装所在的卷，并且加载Windows NT风格的早期OS</p><p>loader（Ntldr.exe) ——生成一个由boot.ini内容决定的启动菜单</p><h3 id="3-核心文件加载及登录"><a href="#3-核心文件加载及登录" class="headerlink" title="3.核心文件加载及登录"></a>3.核心文件加载及登录</h3><p>Windows7启动时，加载其核心文件Ntoskrnl.exe和hal.dall——从注册表中读取设置并加载启动程序</p><p>接下来将运行Windows会话管理器（smss.exe)并且启动Windows启动程序（wininit exe),本地安全验证（Lsass.exe）与服务（services.exe）进程，完成后，就可以登陆系统了</p><h2 id="三-实模式"><a href="#三-实模式" class="headerlink" title="三.实模式"></a>三.实模式</h2><p>处理器被复位或者加电的时候以实模式启动，例如运行BIOS的时候</p><p>这时候处理器中各寄存器以实模式的初始化值工作</p><p>80386处理器在实模式下的存储器寻址方式和8086是一样的，由段寄存器的内容乘以16当作基地址，加上段内的偏移地址形成最终的物理地址，这时候他的32位地址线只用了低20位</p><p>实模式下，80386处理器不能对内存进行分页管理（因为就只有20位地址，再怎么分也没有意义），所以指令寻址的地址就是内存中实际的物理地址，在实模式下，所有的段都是可读、写、执行的（保护模式下，很多段都有限制…）</p><p>实模式下80386不支持优先级，所有的指令相当于工作在特权级（优先级0），所有它可以执行所有特权指令，包括读写寄存器CR0等</p><p>实际上，80386就是通过在实模式下运行初始化控制寄存器、GDTR、LDTR、IDTR与TR等管理寄存器以及页表，然后再通过加载CR0从而进入保护模式的，当然，实模式下不支持硬件上的多任务切换</p><p>也就是说，所有保护模式的特性在实模式下都是不行的，但是保护模式必需由实模式进入</p><p>实模式下，中断处理方式和8086处理器相同，也是用中断向量表来定位中断服务程序地址</p><p>中断向量表只是一个偏移地址，其记载着相应中断服务位于的真正的偏移地址</p><p>中断向量表的结构也和8086处理器一样：每4个字节组成一个中断向量，其中包括两个字节的短地址和两个字节的偏移地址</p><h2 id="四-保护模式"><a href="#四-保护模式" class="headerlink" title="四.保护模式"></a>四.保护模式</h2><p>当80386工作在保护模式下的时候，它的所有功能都是可用的，这时80386所有的32根地址线都可供寻址，物理寻址空间为4GB</p><p>在保护模式下，支持内存分页机制，提供了对虚拟内存的良好支持。虽然与8086可寻址的1MB物理地址空间相比，80386可寻址的物理地址可谓很大，但实际的微机系统不可能安装如此大的物理内存（现在可以了…），所以，为了运行大型程序和真正实现多任务，虚拟内存是一种必须的技术</p><p>举个例子：</p><p>运行一个程序要4GB的空间，那么同时运行4个程序不就要16GB的内存么？</p><p>其实这个4GB只是CPU能看到的一个范围</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;80x86处理器的工作模式&quot;&gt;&lt;a href=&quot;#80x86处理器的工作模式&quot; class=&quot;headerlink&quot; title=&quot;80x86处理器的工作模式&quot;&gt;&lt;/a&gt;80x86处理器的工作模式&lt;/h1&gt;&lt;h2 id=&quot;一、三种工作模式&quot;&gt;&lt;a href=&quot;#一</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基础知识</title>
    <link href="http://example.com/2023/06/07/re/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://example.com/2023/06/07/re/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2023-06-07T05:46:58.139Z</published>
    <updated>2023-06-07T05:47:24.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识（一）位运算"><a href="#基础知识（一）位运算" class="headerlink" title="基础知识（一）位运算"></a>基础知识（一）位运算</h1><h2 id="一-位运算概述"><a href="#一-位运算概述" class="headerlink" title="一.位运算概述"></a>一.位运算概述</h2><p>从现代计算机中所有的数据二进制的形式存储在设备中。即 0、1 两种状态，计算机对二进制数据进行的运算(+、-、*、&#x2F;)都是叫位运算，即将符号位共同参与运算的运算。</p><p>口说无凭，举一个简单的例子来看下 CPU 是如何进行计算的，比如这行代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 35;</span><br><span class="line">int b = 47;</span><br><span class="line">int c = a + b;</span><br></pre></td></tr></table></figure><p>计算两个数的和，因为在计算机中都是以二进制来进行运算，所以上面我们所给的 int 变量会在机器内部先转换为二进制在进行相加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">35:  0 0 1 0 0 0 1 1</span><br><span class="line">47:  0 0 1 0 1 1 1 1</span><br><span class="line">————————————————————</span><br><span class="line">82:  0 1 0 1 0 0 1 0</span><br></pre></td></tr></table></figure><p>所以，相比在代码中直接使用(+、-、*、&#x2F;)运算符，合理的运用位运算更能显著提高代码在机器上的执行效率。</p><h2 id="二-位运算概览"><a href="#二-位运算概览" class="headerlink" title="二.位运算概览"></a>二.位运算概览</h2><table><thead><tr><th align="left">符号</th><th align="left">描述</th><th align="left">运算规则</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">与</td><td align="left">两个位都为1时，结果才为1</td></tr><tr><td align="left">|</td><td align="left">或</td><td align="left">两个位都为0时，结果才为0</td></tr><tr><td align="left">^</td><td align="left">异或</td><td align="left">两个位相同为0，相异为1</td></tr><tr><td align="left">~</td><td align="left">取反</td><td align="left">0变1，1变0</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移</td><td align="left">各二进位全部左移若干位，高位丢弃，低位补0</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移</td><td align="left">各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）</td></tr></tbody></table><h2 id="三-按位与运算符（-amp-）"><a href="#三-按位与运算符（-amp-）" class="headerlink" title="三.按位与运算符（&amp;）"></a>三.按位与运算符（&amp;）</h2><h3 id="（1）-定义："><a href="#（1）-定义：" class="headerlink" title="（1）.定义："></a>（1）.<strong>定义</strong>：</h3><p>参加运算的两个数据，按二进制位进行”与”运算。</p><h3 id="（2）-运算规则："><a href="#（2）-运算规则：" class="headerlink" title="（2）.运算规则："></a>（2）.运算规则：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&amp;0=0  0&amp;1=0  1&amp;0=0  1&amp;1=1</span><br></pre></td></tr></table></figure><p>总结：两位同时为1，结果才为1，否则结果为0。</p><p>例如：3&amp;5 即 0000 0011&amp; 0000 0101 &#x3D; 0000 0001，因此 3&amp;5 的值得1。</p><p>注意：负数按补码形式参加按位与运算。</p><h3 id="（3）-与运算的用途："><a href="#（3）-与运算的用途：" class="headerlink" title="（3）.与运算的用途："></a>（3）.<strong>与运算的用途：</strong></h3><p>&lt;1&gt;.清零</p><p>如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为零的数值相与，结果为零。</p><p>&lt;2&gt;.取一个数的指定位</p><p>比如取数 X&#x3D;1010 1110 的低4位，只需要另找一个数Y，令Y的低4位为1，其余位为0，即Y&#x3D;0000 1111，然后将X与Y进行按位与运算（X&amp;Y&#x3D;0000 1110）即可得到X的指定位。</p><p>&lt;3&gt;.判断奇偶</p><p>只要根据最未位是0还是1来决定，为0就是偶数，为1就是奇数。因此可以用if ((a &amp; 1) &#x3D;&#x3D; 0)代替if (a % 2 &#x3D;&#x3D; 0)来判断a是不是偶数。</p><h2 id="四-按位或运算符（-）"><a href="#四-按位或运算符（-）" class="headerlink" title="四.按位或运算符（|）"></a>四.按位或运算符（|）</h2><h3 id="（1）-定义：-1"><a href="#（1）-定义：-1" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>参加运算的两个对象，按二进制位进行”或”运算。</p><h3 id="（2）-运算规则：-1"><a href="#（2）-运算规则：-1" class="headerlink" title="（2）.运算规则："></a>（2）.运算规则：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0|0=0  0|1=1  1|0=1  1|1=1</span><br></pre></td></tr></table></figure><p>总结：参加运算的两个对象只要有一个为1，其值为1。</p><p>例如：3|5即 0000 0011| 0000 0101 &#x3D; 0000 0111，因此，3|5的值得7。　</p><p>注意：负数按补码形式参加按位或运算。</p><h3 id="（3）-或运算的用途："><a href="#（3）-或运算的用途：" class="headerlink" title="（3）.或运算的用途："></a>（3）.或运算的用途：</h3><p>1）常用来对一个数据的某些位设置为1</p><p>比如将数 X&#x3D;1010 1110 的低4位设置为1，只需要另找一个数Y，令Y的低4位为1，其余位为0，即Y&#x3D;0000 1111，然后将X与Y进行按位或运算（X|Y&#x3D;1010 1111）即可得到。</p><h2 id="五-异或运算符（-）"><a href="#五-异或运算符（-）" class="headerlink" title="五.异或运算符（^）"></a>五.异或运算符（^）</h2><h3 id="（1）-定义：-2"><a href="#（1）-定义：-2" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>参加运算的两个数据，按二进制位进行”异或”运算。</p><h3 id="（2）-运算规则：-2"><a href="#（2）-运算规则：-2" class="headerlink" title="（2）.运算规则："></a>（2）.运算规则：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0^0=0  0^1=1  1^0=1  1^1=0</span><br></pre></td></tr></table></figure><p>总结：参加运算的两个对象，如果两个相应位相同为0，相异为1。</p><h3 id="（3）-异或的几条性质"><a href="#（3）-异或的几条性质" class="headerlink" title="（3）.异或的几条性质:"></a>（3）.异或的几条性质:</h3><ul><li>1、交换律</li><li>2、结合律 (a^b)^c &#x3D;&#x3D; a^(b^c)</li><li>3、对于任何数x，都有 x^x&#x3D;0，x^0&#x3D;x</li><li>4、自反性: a^b^b&#x3D;a^0&#x3D;a;</li></ul><h3 id="（4）-异或运算的用途："><a href="#（4）-异或运算的用途：" class="headerlink" title="（4）.异或运算的用途："></a>（4）.异或运算的用途：</h3><p>&lt;1&gt;.翻转指定位</p><p>比如将数 X&#x3D;1010 1110 的低4位进行翻转，只需要另找一个数Y，令Y的低4位为1，其余位为0，即Y&#x3D;0000 1111，然后将X与Y进行异或运算（X^Y&#x3D;1010 0001）即可得到。</p><p>&lt;2&gt;.与0相异或值不变</p><p>例如：1010 1110 ^ 0000 0000 &#x3D; 1010 1110</p><p>&lt;3&gt;.交换两个数</p><h3 id="（5）-实例"><a href="#（5）-实例" class="headerlink" title="（5）.实例"></a>（5）.实例</h3><p>void Swap(int &amp;a, int &amp;b){<br>  if (a !&#x3D; b){<br>    a ^&#x3D; b;<br>    b ^&#x3D; a;<br>    a ^&#x3D; b;<br>  }<br>}</p><h2 id="六-取反运算符"><a href="#六-取反运算符" class="headerlink" title="六.取反运算符 (~)"></a>六.取反运算符 (~)</h2><h3 id="（1）-定义：-3"><a href="#（1）-定义：-3" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>参加运算的一个数据，按二进制进行”取反”运算。</p><h3 id="（2）-运算规则：-3"><a href="#（2）-运算规则：-3" class="headerlink" title="（2）.运算规则："></a>（2）.运算规则：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~1=0</span><br><span class="line">~0=1</span><br></pre></td></tr></table></figure><p>总结：对一个二进制数按位取反，即将0变1，1变0。</p><h3 id="（3）-异或运算的用途："><a href="#（3）-异或运算的用途：" class="headerlink" title="（3）.异或运算的用途："></a>（3）.异或运算的用途：</h3><p>&lt;1&gt;使一个数的最低位为零</p><p>使a的最低位为0，可以表示为：a &amp; <del>1。</del>1的值为 1111 1111 1111 1110，再按”与”运算，最低位一定为0。因为” ~”运算符的优先级比算术运算符、关系运算符、逻辑运算符和其他运算符都高。</p><h2 id="七-左移运算符（-lt-lt-）"><a href="#七-左移运算符（-lt-lt-）" class="headerlink" title="七.左移运算符（&lt;&lt;）"></a>七.左移运算符（&lt;&lt;）</h2><h3 id="（1）-定义：-4"><a href="#（1）-定义：-4" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。</p><p>设 a&#x3D;1010 1110，a &#x3D; a&lt;&lt; 2 将a的二进制位左移2位、右补0，即得a&#x3D;1011 1000。</p><p>若左移时舍弃的高位不包含1，则每左移一位，相当于该数乘以2。</p><h2 id="八-右移运算符（-gt-gt-）"><a href="#八-右移运算符（-gt-gt-）" class="headerlink" title="八.右移运算符（&gt;&gt;）"></a>八.右移运算符（&gt;&gt;）</h2><h3 id="（1）-定义：-5"><a href="#（1）-定义：-5" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</p><p>例如：a&#x3D;a&gt;&gt;2 将a的二进制位右移2位，左补0 或者 左补1得看被移数是正还是负。</p><p>操作数每右移一位，相当于该数除以2。</p><h2 id="十-复合赋值运算符"><a href="#十-复合赋值运算符" class="headerlink" title="十.复合赋值运算符"></a>十.复合赋值运算符</h2><h3 id="（1）-定义：-6"><a href="#（1）-定义：-6" class="headerlink" title="（1）.定义："></a>（1）.定义：</h3><p>位运算符与赋值运算符结合，组成新的复合赋值运算符，它们是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&amp;=        例：a&amp;=b    相当于     a=a&amp;b</span><br><span class="line"></span><br><span class="line">|=        例：a|=b    相当于     a=a|b</span><br><span class="line"></span><br><span class="line">&gt;&gt;=      例：a&gt;&gt;=b   相当于     a=a&gt;&gt;b</span><br><span class="line"></span><br><span class="line">&lt;&lt;=      例：a&lt;&lt;=b     相当于      a=a&lt;&lt;b</span><br><span class="line"></span><br><span class="line">^=        例：a^=b    相当于   a=a^b</span><br></pre></td></tr></table></figure><h3 id="（2）-运算规则：-4"><a href="#（2）-运算规则：-4" class="headerlink" title="（2）.运算规则："></a>（2）.运算规则：</h3><p>和前面讲的复合赋值运算符的运算规则相似。</p><p>不同长度的数据进行位运算：如果两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。</p><p>以”与运算”为例说明如下：我们知道在C语言中long型占4个字节，int型占2个字节，如果一个long型数据与一个int型数据进行”与运算”，右端对齐后，左边不足的位依下面三种情况补足，</p><ul><li>1）如果整型数据为正数，左边补16个0。</li><li>2）如果整型数据为负数，左边补16个1。</li><li>3）如果整形数据为无符号数，左边也补16个0。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础知识（一）位运算&quot;&gt;&lt;a href=&quot;#基础知识（一）位运算&quot; class=&quot;headerlink&quot; title=&quot;基础知识（一）位运算&quot;&gt;&lt;/a&gt;基础知识（一）位运算&lt;/h1&gt;&lt;h2 id=&quot;一-位运算概述&quot;&gt;&lt;a href=&quot;#一-位运算概述&quot; class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基础知识</title>
    <link href="http://example.com/2023/06/07/re/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    <id>http://example.com/2023/06/07/re/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</id>
    <published>2023-06-07T05:46:58.135Z</published>
    <updated>2023-06-07T05:47:24.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="位运算的一些奇技淫巧"><a href="#位运算的一些奇技淫巧" class="headerlink" title="位运算的一些奇技淫巧"></a>位运算的一些奇技淫巧</h1><h2 id="位运算简介"><a href="#位运算简介" class="headerlink" title="位运算简介"></a>位运算简介</h2><p>常见的位运算也就是以下6种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">| 运算：即或运算，全0则0</span><br><span class="line"></span><br><span class="line">&amp; 运算：即与运算，全1则1</span><br><span class="line"></span><br><span class="line">^ 运算：即异或运算，相同为0，不同为1</span><br><span class="line"></span><br><span class="line">~ 运算：即非运算，0为1,1为0</span><br><span class="line"></span><br><span class="line">(&lt;&lt;) 运算：左移运算，高位丢弃，低位补0</span><br><span class="line"></span><br><span class="line">(&gt;&gt;) 运算：右移运算。（无符号）低位丢弃，高位补0；（有符号）低位丢弃，高位补符号</span><br></pre></td></tr></table></figure><p>常用的就是这6种，一般解题中也完全够用了！</p><h2 id="技巧介绍"><a href="#技巧介绍" class="headerlink" title="技巧介绍"></a>技巧介绍</h2><h3 id="1-位操作实现加减乘除运算"><a href="#1-位操作实现加减乘除运算" class="headerlink" title="1.位操作实现加减乘除运算"></a>1.位操作实现加减乘除运算</h3><h4 id="加法运算"><a href="#加法运算" class="headerlink" title="加法运算"></a>加法运算</h4><p>这里先从加法运算说起：</p><p>我们假设</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a: 001010101</span><br><span class="line">b: 000101111</span><br></pre></td></tr></table></figure><p>在无进位相加下，a^b 就可以达到相加的目的；而在只考虑进位的位的情况下，就是只考虑进位产生的值的时候，我们可以用（a&amp;b）&lt;&lt; 1,那么我们结合上面两种情况是不是可以这么想：我们将a^b的值和(a&amp;b)&lt;&lt;1的值轮番进行求 ^ 和 &amp;&lt;&lt;1 运算，直到最后&amp;&lt;&lt;1的值算为全0，这就意味着所有的进位都已经被 ^ 进结果了，那么最终的结果就是求和的值了</p><p>我们可以看见，当最后 &amp;&lt;&lt;1 的结果为0时，说明所有的进位都已经被加到结果中去了，那么该结果也就是最终的计算结果了。</p><p>这里我们用代码把它表示出来：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum = a;</span><br><span class="line">    <span class="keyword">while</span>(b != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      sum = a ^ b;</span><br><span class="line">      b = (a &amp; b) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">      a = sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="减法运算"><a href="#减法运算" class="headerlink" title="减法运算"></a>减法运算</h4><p>那么减法运算就很好理解了，我们可以认为a-b &#x3D; a+(-b)，这里就是要求得b的相反数，那么根据规则，一个数的相反数（补码）就等于反码加1，那么我们是不是可以这么写：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">minus</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> add(a , add( ~b , <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="乘法运算"><a href="#乘法运算" class="headerlink" title="乘法运算"></a>乘法运算</h4><p>假设我们要计算 a * b,那么我们就可以写成a * 2^0 * b0 + a * 2^1 * b1 + …+ a * 2^31 * b31,其中bi为 0 或者为 1 代表整数 b 的二进制数表达中第 i 位的值。</p><p>这里我们同样举一个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = 22 = 000010110</span><br><span class="line">b = 13 = 000001101</span><br><span class="line">res = 0= 000000000</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230306142920129-331620962.png"></p><p>也不知道是哪一位鬼才总结出这种神奇的算法，说实话，有这个计算的功夫，我用正常的计算方法都交卷了。除了应对一些题目外，大家了解一下就好了。</p><p>下面用代码描述一下上面的过程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">multi</span><span class="params">(<span class="type">int</span> &amp;a,<span class="type">int</span> &amp;b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((b &amp; <span class="number">1</span>) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res = add(res,a);</span><br><span class="line">        &#125;</span><br><span class="line">        a&lt;&lt; = <span class="number">1</span>;</span><br><span class="line">        b&gt;&gt; = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="除法运算"><a href="#除法运算" class="headerlink" title="除法运算"></a>除法运算</h4><p>这里就不过多赘述了，由于使用的很少加上思路和乘法是一样的，大家有兴趣的可以自己下来推一下。（其实是阿光不想写了）</p><h3 id="2-交换两个整数值"><a href="#2-交换两个整数值" class="headerlink" title="2.交换两个整数值"></a>2.交换两个整数值</h3><p>如果有人说让你交换两个整数的值但不能额外申请第三个变量，你准备使用什么方法呢？</p><p>那么你应该想到这种方法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> &amp;a,<span class="type">int</span> &amp;b)</span></span><br><span class="line">&#123;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">    b = a ^ b;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里解释一下：<br>首先，a &#x3D; a ^ b; 那么 b &#x3D; a ^ b &#x3D; (a ^ b) ^ b &#x3D; a,那么这里就把 a 的值成功的给了b; 第三步就是将前两步的结果带入计算： a &#x3D; (a ^ b) ^ a &#x3D; b; 交换值的目的就达到了。是不是很奇妙呢？</p><h3 id="3-判断奇偶数"><a href="#3-判断奇偶数" class="headerlink" title="3.判断奇偶数"></a>3.判断奇偶数</h3><p>我觉得这个方法正是让人眼前一亮，核心思想其实就是根据数的最后一位是0还是1来做判断，那么就有：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((a &amp; <span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="comment">//是个偶数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment">//是个奇数</span></span><br></pre></td></tr></table></figure><h3 id="4-高低位交换"><a href="#4-高低位交换" class="headerlink" title="4.高低位交换"></a>4.高低位交换</h3><p>这个还是比较常用的，在很多客制化的协议里面，常常涉及到高低位交换的操作。假设有一个16位无符号，将其高8位和低8位进行交换：</p><p>举个例子: 00111010 01010011…<br>那么高低8位进行交换就得到: 01010011 00111010 这就是完全不相同的两个数了。</p><p>从上面的操作我们可以看出，将无符号数 a &gt;&gt; 8 就可以将高8位转移到低8位，高位补0； 同时将a &lt;&lt; 8 就可以将低8位转移到高8位，低8位补0，然后将 a &gt;&gt; 8 和 a&lt;&lt; 8 尽行或操作就可以求得交换后的结果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">short</span> a = <span class="number">34520</span>;</span><br><span class="line">a = (a &gt;&gt; <span class="number">8</span>) | (a &lt;&lt; <span class="number">8</span>)</span><br></pre></td></tr></table></figure><h3 id="5-统计二进制中1的个数"><a href="#5-统计二进制中1的个数" class="headerlink" title="5.统计二进制中1的个数"></a>5.统计二进制中1的个数</h3><p>这里巧妙的用到了一个 a &amp;&#x3D; (a-1),说一下原理：</p><p>a与a-1进行运算，那么每次都可以消去一个1，那么我们搞一个计数器，当把a所有的1都消去之后，返回计数器的值就可以了，非常的方便</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a)</span><br><span class="line">&#123;</span><br><span class="line">    a = a &amp; (a<span class="number">-1</span>);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> count;</span><br></pre></td></tr></table></figure><p>在出现偶数次的数组中找出奇数次的数<br>这里我们直接看一个力扣上的题目：</p><p>给定一个数组arr,其中只有一个数出现了奇数次，其他的数都是偶数次，将这个数打印出来。</p><p>其实想一下这个题目可以有很多方法都能做出来，但是题目给出的要求是时间复杂度O（N）,常规方法遍历一遍能找出来吗？我是没有想到什么好方法，这里提供一种位运算的思路：</p><p>整数n与0异或的结果是 n,整数n与整数n异或的结果是0. 我们申请一个整形变量 A0赋值为0 ,将A0与arr中的每一个数求异或，那么最后留下来的那个数就是只出现过一次的数，可以揣摩一下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">getjishunum</span><span class="params">(<span class="type">int</span> *arr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> A0 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; arr.length; i++)</span><br><span class="line">        A0 ^= arr[i];</span><br><span class="line">    <span class="keyword">return</span> A0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大小写转换<br>除了上面的妙用以外，利用或运算|和空格将英文字符转化为小写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(‘a’ | ’ <span class="string">&#x27;) = ‘a’</span></span><br><span class="line"><span class="string">(‘A’ | ’ &#x27;</span>) = ‘a’</span><br></pre></td></tr></table></figure><p>利用与运算 &amp; 和下划线将英文字符转化为大写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( ‘b’ &amp; ’ _ <span class="string">&#x27;) = ‘B’</span></span><br><span class="line"><span class="string">( ‘B’ &amp; ’ _ &#x27;</span>) = ‘B’</span><br></pre></td></tr></table></figure><p>利用异或操作 ^ 和空格进行英文字符大小写互换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(‘d’ ^ ’ <span class="string">&#x27;) = ‘D’</span></span><br><span class="line"><span class="string">(‘D’ ^ ’ &#x27;</span>) = ‘d’</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;位运算的一些奇技淫巧&quot;&gt;&lt;a href=&quot;#位运算的一些奇技淫巧&quot; class=&quot;headerlink&quot; title=&quot;位运算的一些奇技淫巧&quot;&gt;&lt;/a&gt;位运算的一些奇技淫巧&lt;/h1&gt;&lt;h2 id=&quot;位运算简介&quot;&gt;&lt;a href=&quot;#位运算简介&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>动态调试</title>
    <link href="http://example.com/2023/06/07/re/%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/"/>
    <id>http://example.com/2023/06/07/re/%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/</id>
    <published>2023-06-07T05:46:58.131Z</published>
    <updated>2023-06-07T05:47:24.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态调试"><a href="#动态调试" class="headerlink" title="动态调试"></a>动态调试</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;动态调试&quot;&gt;&lt;a href=&quot;#动态调试&quot; class=&quot;headerlink&quot; title=&quot;动态调试&quot;&gt;&lt;/a&gt;动态调试&lt;/h1&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>第一次任务</title>
    <link href="http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BB%BB%E5%8A%A1/1.elf%E7%BB%83%E4%B9%A0/"/>
    <id>http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BB%BB%E5%8A%A1/1.elf%E7%BB%83%E4%B9%A0/</id>
    <published>2023-06-07T05:46:58.127Z</published>
    <updated>2023-06-07T05:47:24.472Z</updated>
    
    <content type="html"><![CDATA[<p>这个真的是一波三折…</p><p>第一次windows更新把我写的搞没了…</p><p>第二次我做3.elf的时候用vs2022写东西，写完运行不起来，我改了一下，结果弹出来一个找不到什么东西的弹窗，我点确定，捏妈妈的电脑黑屏，然后所有东西都错位了…typora打开也是空白，重启之后新写的没了…服了</p><p>开的东西太多电脑爆内存了？不知道，当时把ida、虚拟机、vs2022、typora、chrome都开着的…</p><p>现在每写一点就ctrl + s保命</p><h1 id="1-elf练习"><a href="#1-elf练习" class="headerlink" title="1.elf练习"></a>1.elf练习</h1><h2 id="一-把文件拖进IDA"><a href="#一-把文件拖进IDA" class="headerlink" title="一.把文件拖进IDA"></a>一.把文件拖进IDA</h2><p>这个没什么好说的，有手就行</p><h2 id="二-进入start函数"><a href="#二-进入start函数" class="headerlink" title="二.进入start函数"></a>二.进入start函数</h2><p>直接ctrl + f 查找函数</p><p>可以看到，lea指令将main函数的地址送到rdi寄存器里面（目的变址寄存器）</p><p>ps：我不知道目的变址寄存器是个什么东西…</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202212/3069851-20221231231115175-1197097671.png"></p><p>但应该是，就进入了main函数</p><h2 id="三-进入main函数"><a href="#三-进入main函数" class="headerlink" title="三.进入main函数"></a>三.进入main函数</h2><p>进入main函数后，发现</p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230105144107017-1954995887.png" style="zoom:67%;" /><p>call调用了一个叫_Z6leve11v的函数</p><p>那我们就进去看一看</p><h2 id="四-加密"><a href="#四-加密" class="headerlink" title="四.加密"></a>四.加密</h2><p>进去之后，可以看到，这就是题目本身了</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230105145520755-116797692.png"></p><p>先看一下加密的过程吧</p><p>先对v1进行按位异或</p><p>再将输入的字符串的每一位，按位异或上下一位（除最后一位）</p><p>最后一位按位异或上s[0],接着再将每一位按位异或上v1</p><p>然后我们来看验证</p><p>先是一个很巧妙的判断，判断输入的长度</p><p>如果输入长度不对就直接退出了</p><p>所以在调试时，不要随便输入</p><p>就是将每一位和compare_data中相应的进行比较</p><p>所以，我们只需找到compare_data中的数据即可</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230105232344611-1394276474.png"></p><p>直接跳转到compare_data里面</p><p>话说静态分析时直接跳到compare_data里面去，会显示最后有个dup(0)，分析时猜测时汇编里面填入0的意思，最后查出来是汇编的伪指令——在内存中存入0</p><p>用lazy_ida把数据直接cv下来，放到一边备用</p><p>这里可以按一下h，把16进制转换为10进制，等一下调试方便看，也不用去前面加0x</p><h2 id="五-解密"><a href="#五-解密" class="headerlink" title="五.解密"></a>五.解密</h2><p>这里使用的是异或加密</p><p>总所周知，异或是可以进行逆运算的</p><p>他这里最终对输入的加密，只是异或上v1</p><p>所以我们得先获得最后一次的v1</p><p>这个很简单，直接对着它cv下来修好了，把对字符串的那部分先剔除</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">50</span>; j++)</span><br><span class="line">      &#123;</span><br><span class="line">          v1 ^= j ^ v2 ^ <span class="number">95</span>;</span><br><span class="line">          v2++;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然后我们开始对字符串进行处理</p><p>先梳理一下我们手里有哪些数据</p><p>1.compare_data</p><p>2.加密方式：按位异或（将字符串与v1进行按位异或运算）</p><p>3.v1</p><p>再梳理一下它怎么加密输入的</p><p>新字符串 &#x3D; 字符串[i] ^ 字符串[i+1]</p><p>compare_data &#x3D; 新字符串 ^ v1</p><p>那么根据异或的逆运算</p><p>新字符串 &#x3D; compare_data ^ v1</p><p>字符串[i] &#x3D;  新字符串 ^ 字符串[i+1]</p><p>我们倒着进行逆运算即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">39</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">for</span> (j = <span class="number">50</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">     &#123;</span><br><span class="line">         v2--;</span><br><span class="line">         compare_data[i] ^= v1;</span><br><span class="line">         compare_data[i] ^= compare_data[(i + <span class="number">1</span>) % <span class="number">40</span>];</span><br><span class="line">         v1 ^= j ^ v2 ^ <span class="number">95</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>然后就ojbk了</p><h2 id="六-尝试爆破"><a href="#六-尝试爆破" class="headerlink" title="六.尝试爆破"></a>六.尝试爆破</h2><p>简而言之…没写出来</p><p>将s[i] ^ s[i+1]这一步把我难住了…</p><h1 id="2-elf练习"><a href="#2-elf练习" class="headerlink" title="2.elf练习"></a>2.elf练习</h1><h2 id="一-进入main函数"><a href="#一-进入main函数" class="headerlink" title="一.进入main函数"></a>一.进入main函数</h2><p>这个没找到start函数，直接进入main函数</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106194919979-555342234.png"></p><p>这里有三个点</p><p>一个是_readfsqword(0x28)，另一个是read(0,buf,0xFuLL)这两个我不知道在干什么，但这两个应该是两个函数，括号里面应该是它们的参数</p><p>进入read函数</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106233819182-2012809866.png"></p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106233859691-1247430632.png"></p><p>看不懂…</p><p>先放到一边不管</p><p>从名字来看，我猜测read函数可能、maybe、大概是个输入函数</p><p>继续往下看</p><p>并没有发现有输入函数</p><p>并且在循环中我们可以发现一个叫buf的数组</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106234048626-775597543.png"></p><p>再往上看看，哦！我们发现了什么，read函数的参数里就出现了buf</p><p>所以我大胆猜测，read就是一个输入函数</p><p>最后百度了一下，是有一个叫read的输入函数</p><p>还有一个是为什么25-28行是个什么东西？</p><p>后面没看到啊</p><h2 id="二-加密"><a href="#二-加密" class="headerlink" title="二.加密"></a>二.加密</h2><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106235525143-2037348425.png"></p><p>第一步就是一个对输入字符串的按位异或</p><p>我们将输入字符串暂且称为flag吧</p><p>按位异或后得到flag1</p><p>然后flag1再加上v4获得flag2，这里要注意，v4每次都会自加，但是v4是v4++，要注意自加的顺序，先加了v4后v4再自加。</p><p>最开始v4&#x3D;0,所以第一次是flag1+0，加了0之后v4再自加变成1，第二次循环就应该是flag+1了</p><h2 id="三-对比"><a href="#三-对比" class="headerlink" title="三.对比"></a>三.对比</h2><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106235649689-913011920.png"></p><p>先是一个循环，循环了14次，所以我猜测这个flag长度应该是14</p><p>然后进行判断</p><p>判断的条件是将*((_BYTE *)按位与上v8再加上k，如果不等于flag2就输出wrong</p><p>那么问题来了，这个*((_BYTE *)是什么东西捏</p><p>这应该是两个部分</p><p>首先，（_BYTE*）将值或寄存器转换为字节指针，（这类似于将值分配给定义为 的 C 变量<code>byte *</code>（括号里是大佬说的我没读懂…））</p><p>其次，*取消引用地址并检索该地址中的值</p><p>直接在这一步设个断点</p><p>进入动态调试</p><p>运行到这里看看</p><p>还记得之前出现的25-28行吗</p><p>嘿嘿，这个时候出现了，cv下来</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230108193402889-1363450505.png"></p><p>0h_y0u1_finD0V？</p><p>不鸡丢，写好的C不见了…</p><p>但输进去还是有个wrong</p><h1 id="3-elf"><a href="#3-elf" class="headerlink" title="3.elf"></a>3.elf</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">compare_data = [ <span class="number">0x66</span>,<span class="number">0x4e</span>,<span class="number">0xa9</span>,<span class="number">0xfd</span>,<span class="number">0x3c</span>,<span class="number">0x55</span>,</span><br><span class="line"><span class="number">0x90</span>,<span class="number">0x24</span>,<span class="number">0x57</span>,<span class="number">0xf6</span>,<span class="number">0x5d</span>,<span class="number">0xb1</span>,</span><br><span class="line"><span class="number">0x1</span>,<span class="number">0x20</span>,<span class="number">0x81</span>,<span class="number">0xfd</span>,<span class="number">0x36</span>,<span class="number">0xa9</span>,</span><br><span class="line"><span class="number">0x1f</span>,<span class="number">0xa1</span>,<span class="number">0xe</span>,<span class="number">0xd</span>,<span class="number">0x80</span>,<span class="number">0x8f</span>,</span><br><span class="line"><span class="number">0xce</span>,<span class="number">0x77</span>,<span class="number">0xe8</span>,<span class="number">0x23</span>,<span class="number">0x9e</span>,<span class="number">0x27</span>,</span><br><span class="line"><span class="number">0x60</span>,<span class="number">0x2f</span>,<span class="number">0xa5</span>,<span class="number">0xcf</span>,<span class="number">0x1b</span>,<span class="number">0xbd</span>,</span><br><span class="line"><span class="number">0x32</span>,<span class="number">0xdb</span>,<span class="number">0xff</span>,<span class="number">0x28</span>,<span class="number">0xa4</span>,<span class="number">0x5d</span> ]</span><br><span class="line">flag_s = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    flag_s.append(BitVec(<span class="string">&#x27;%d&#x27;</span> %i,<span class="number">8</span>))</span><br><span class="line">v4 = [<span class="number">0</span>]*<span class="number">42</span></span><br><span class="line">v9 = <span class="number">0</span></span><br><span class="line">v11 = <span class="number">0</span></span><br><span class="line">v10 = <span class="number">0</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"><span class="comment">#把加密的部分搬过来</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">  v4[i] = flag_s[i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):                          <span class="comment">#注意循环次数</span></span><br><span class="line">      <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):                    <span class="comment">#注意循环次数</span></span><br><span class="line">        v9 = <span class="number">6</span> * i + j</span><br><span class="line">        v11 = flag_s[v9]</span><br><span class="line">        v10 = flag_s[v9]</span><br><span class="line">        v11 = ~v11</span><br><span class="line">        v11 &amp;= i * (j + <span class="number">2</span>)</span><br><span class="line">        v10 = v10 &amp; ~(i * (j + <span class="number">2</span>)) | v11</span><br><span class="line">        v9 = <span class="number">7</span> * j + i</span><br><span class="line">        v4[v9] = v10</span><br><span class="line"><span class="comment">#这里注意，ida里面循环从i=1开始，这里i从0开始</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">41</span>):</span><br><span class="line">      <span class="keyword">if</span> ( (i + <span class="number">1</span>)% <span class="number">2</span> == <span class="number">1</span> ):</span><br><span class="line">        v4[i+<span class="number">1</span>] *= <span class="number">107</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        v4[i+<span class="number">1</span>] += v4[i]</span><br><span class="line"><span class="comment">#添加约束条件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    s.add(v4[i] == compare_data[i])</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(s.check() == sat):</span><br><span class="line">    condition = []</span><br><span class="line">    m = s.model()</span><br><span class="line">    p = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">      p += <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[flag_s[i]])))</span><br><span class="line">      condition.append(flag_s[i] != <span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[flag_s[i]])))</span><br><span class="line">      <span class="built_in">print</span>(p)</span><br><span class="line">      s.add(Or(condition))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个真的是一波三折…&lt;/p&gt;
&lt;p&gt;第一次windows更新把我写的搞没了…&lt;/p&gt;
&lt;p&gt;第二次我做3.elf的时候用vs2022写东西，写完运行不起来，我改了一下，结果弹出来一个找不到什么东西的弹窗，我点确定，捏妈妈的电脑黑屏，然后所有东西都错位了…typora打开也是</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界</title>
    <link href="http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/Reversing-x64Elf-100/"/>
    <id>http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/Reversing-x64Elf-100/</id>
    <published>2023-06-07T05:46:58.126Z</published>
    <updated>2023-06-07T05:47:24.470Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目：Reversing-x64Elf-100"><a href="#题目：Reversing-x64Elf-100" class="headerlink" title="题目：Reversing-x64Elf-100"></a>题目：Reversing-x64Elf-100</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> v3[<span class="number">3</span>][<span class="number">8</span>] = &#123;&#123;<span class="string">&quot;Dufhbmf&quot;</span>&#125;,&#123;<span class="string">&quot;pG`imos&quot;</span>&#125;,&#123;<span class="string">&quot;ewUglpt&quot;</span>&#125;&#125;;</span><br><span class="line"><span class="type">char</span> flag[<span class="number">11</span>];</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;=<span class="number">11</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line">flag[i] = v3[i%<span class="number">3</span>][<span class="number">2</span>*(i/<span class="number">3</span>)] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目：Reversing-x64Elf-100&quot;&gt;&lt;a href=&quot;#题目：Reversing-x64Elf-100&quot; class=&quot;headerlink&quot; title=&quot;题目：Reversing-x64Elf-100&quot;&gt;&lt;/a&gt;题目：Reversing-x64E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界</title>
    <link href="http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/666/"/>
    <id>http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/666/</id>
    <published>2023-06-07T05:46:58.123Z</published>
    <updated>2023-06-07T05:47:24.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目：666"><a href="#题目：666" class="headerlink" title="题目：666"></a>题目：666</h1><h2 id="一-进入start函数"><a href="#一-进入start函数" class="headerlink" title="一.进入start函数"></a>一.进入start函数</h2><p><img src="https://img2023.cnblogs.com/blog/3069851/202301/3069851-20230106211553076-199612863.png"></p><p>看了下汇编，main那里</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目：666&quot;&gt;&lt;a href=&quot;#题目：666&quot; class=&quot;headerlink&quot; title=&quot;题目：666&quot;&gt;&lt;/a&gt;题目：666&lt;/h1&gt;&lt;h2 id=&quot;一-进入start函数&quot;&gt;&lt;a href=&quot;#一-进入start函数&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>招新赛</title>
    <link href="http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%8B%9B%E6%96%B0%E8%B5%9B/%E6%8B%9B%E6%96%B0%E8%B5%9Bwp/"/>
    <id>http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%8B%9B%E6%96%B0%E8%B5%9B/%E6%8B%9B%E6%96%B0%E8%B5%9Bwp/</id>
    <published>2023-06-07T05:46:58.117Z</published>
    <updated>2023-06-07T05:47:24.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="招新赛wp"><a href="#招新赛wp" class="headerlink" title="招新赛wp"></a>招新赛wp</h1><h2 id="一-Base8"><a href="#一-Base8" class="headerlink" title="一.Base8"></a>一.Base8</h2><p>类似Base64的思路</p><table><thead><tr><th>文本</th><th>Z</th><th></th><th>S</th><th></th><th></th><th>Z</th><th></th><th></th></tr></thead><tbody><tr><td>ASCII码</td><td>90</td><td></td><td>83</td><td></td><td></td><td>90</td><td></td><td></td></tr><tr><td>ASCII码</td><td>0b01011010</td><td></td><td>0b01010011</td><td></td><td></td><td>0b01011010</td><td></td><td></td></tr><tr><td>二进制位</td><td>0b010</td><td>0b110</td><td>0b100</td><td>0b101</td><td>0b001</td><td>0b101</td><td>0b011</td><td>0b010</td></tr><tr><td>索引</td><td>2</td><td>6</td><td>4</td><td>5</td><td>1</td><td>5</td><td>3</td><td>2</td></tr><tr><td>Base8编码</td><td>2</td><td>6</td><td>4</td><td>5</td><td>1</td><td>5</td><td>3</td><td>2</td></tr></tbody></table><p>用下面的代码可以算出ASCII码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> <span class="title function_">transfer</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">3</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((x / <span class="number">2</span>) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">buf[<span class="number">2</span> - count] = x % <span class="number">2</span>;</span><br><span class="line">x = x / <span class="number">2</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">buf[<span class="number">2</span> - count] = x % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> str[] = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">1</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,</span><br><span class="line">  <span class="number">1</span>,<span class="number">0</span>,<span class="number">6</span>,</span><br><span class="line">  <span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">5</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">1</span>,<span class="number">0</span>,<span class="number">7</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">1</span>,<span class="number">1</span>,</span><br><span class="line">  <span class="number">0</span>,<span class="number">7</span>,<span class="number">1</span>,</span><br><span class="line">  <span class="number">6</span>,<span class="number">0</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,</span><br><span class="line">  <span class="number">7</span>,<span class="number">1</span>,<span class="number">6</span>,</span><br><span class="line">  <span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,</span><br><span class="line">  <span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">1</span>,<span class="number">1</span>,</span><br><span class="line">  <span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">4</span>,<span class="number">0</span>,<span class="number">6</span>,</span><br><span class="line">  <span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,</span><br><span class="line">  <span class="number">5</span>,<span class="number">3</span>,<span class="number">0</span>,</span><br><span class="line">  <span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,</span><br><span class="line">  <span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,</span><br><span class="line">  <span class="number">0</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line">  <span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line">  <span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i, j, num;</span><br><span class="line"><span class="type">char</span> a[<span class="number">32</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>,j = <span class="number">0</span>; i &lt; <span class="number">89</span>; i++,j)</span><br><span class="line">&#123;</span><br><span class="line">num = transfer(str[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-SMC"><a href="#二-SMC" class="headerlink" title="二.SMC"></a>二.SMC</h2><p>傻乎乎看了半天没看出个所以然来，一看名字，正好是提示</p><p>SMC反调试</p><p>进入main函数</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230304202403260-5442362.png"></p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230304202623664-1287438095.png"></p><p>发现不对劲，十分甚至有九分不对劲</p><p>这就是加密后的机器码，加密的内容应该是在对输入的内容进行进行操作</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230304202126461-786044100.png"></p><p>先把它搞出来（ollydbg中，可以在00411BBC处设一个断点（也就是在被加自加密的内容解码后，被调用的地方），等运行到这里后，回去查看004117A0（被自加密的地方）的汇编）</p><p>如下</p><p>很麻烦…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">004117A0    | 55                                    | push ebp                                                |</span><br><span class="line">004117A1    | 8BEC                                  | mov ebp,esp                                             |</span><br><span class="line">004117A3    | 81EC E4000000                         | sub esp,0xE4                                            |</span><br><span class="line">004117A9    | 53                                    | push ebx                                                |</span><br><span class="line">004117AA    | 56                                    | push esi                                                | esi:EntryPoint</span><br><span class="line">004117AB    | 57                                    | push edi                                                |</span><br><span class="line">004117AC    | 8D7D DC                               | lea edi,dword ptr ss:[ebp-0x24]                         |</span><br><span class="line">004117AF    | B9 09000000                           | mov ecx,0x9                                             | ecx:&quot;12345678901234567890123456789012&quot;, 9:&#x27;\t&#x27;</span><br><span class="line">004117B4    | B8 CCCCCCCC                           | mov eax,0xCCCCCCCC                                      |</span><br><span class="line">004117B9    | F3:AB                                 | rep stosd                                               |</span><br><span class="line">004117BB    | B9 A2C04100                           | mov ecx,smc.41C0A2                                      | ecx:&quot;12345678901234567890123456789012&quot;</span><br><span class="line">004117C0    | E8 6AFBFFFF                           | call smc.41132F                                         |</span><br><span class="line">004117C5    | C645 FB 00                            | mov byte ptr ss:[ebp-0x5],0x0                           |</span><br><span class="line">004117C9    | C645 EF 00                            | mov byte ptr ss:[ebp-0x11],0x0                          |</span><br><span class="line">004117CD    | C745 E0 00000000                      | mov dword ptr ss:[ebp-0x20],0x0                         |</span><br><span class="line">004117D4    | C745 E0 00000000                      | mov dword ptr ss:[ebp-0x20],0x0                         |</span><br><span class="line">004117DB    | EB 09                                 | jmp smc.4117E6                                          |</span><br><span class="line">004117DD    | 8B45 E0                               | mov eax,dword ptr ss:[ebp-0x20]                         |</span><br><span class="line">004117E0    | 83C0 01                               | add eax,0x1                                             |</span><br><span class="line">004117E3    | 8945 E0                               | mov dword ptr ss:[ebp-0x20],eax                         |</span><br><span class="line">004117E6    | 8B45 E0                               | mov eax,dword ptr ss:[ebp-0x20]                         |</span><br><span class="line">004117E9    | 3B45 0C                               | cmp eax,dword ptr ss:[ebp+0xC]                          | [ebp+C]:&quot;‥R&quot;==&amp;&quot;D:\\CTF\\doge\\面试\\smc.exe&quot;</span><br><span class="line">004117EC    | 7D 49                                 | jge smc.411837                                          |</span><br><span class="line">004117EE    | 8B45 08                               | mov eax,dword ptr ss:[ebp+0x8]                          |</span><br><span class="line">004117F1    | 0345 E0                               | add eax,dword ptr ss:[ebp-0x20]                         |</span><br><span class="line">004117F4    | 8A08                                  | mov cl,byte ptr ds:[eax]                                |</span><br><span class="line">004117F6    | 884D FB                               | mov byte ptr ss:[ebp-0x5],cl                            |</span><br><span class="line">004117F9    | 8B45 E0                               | mov eax,dword ptr ss:[ebp-0x20]                         |</span><br><span class="line">004117FC    | 83C0 01                               | add eax,0x1                                             |</span><br><span class="line">004117FF    | 99                                    | cdq                                                     |</span><br><span class="line">00411800    | F77D 0C                               | idiv dword ptr ss:[ebp+0xC]                             | [ebp+C]:&quot;‥R&quot;==&amp;&quot;D:\\CTF\\doge\\面试\\smc.exe&quot;</span><br><span class="line">00411803    | 8B45 08                               | mov eax,dword ptr ss:[ebp+0x8]                          |</span><br><span class="line">00411806    | 8A0C10                                | mov cl,byte ptr ds:[eax+edx]                            |</span><br><span class="line">00411809    | 884D EF                               | mov byte ptr ss:[ebp-0x11],cl                           |</span><br><span class="line">0041180C    | 0FB645 FB                             | movzx eax,byte ptr ss:[ebp-0x5]                         |</span><br><span class="line">00411810    | F7D0                                  | not eax                                                 |</span><br><span class="line">00411812    | 0FB64D EF                             | movzx ecx,byte ptr ss:[ebp-0x11]                        |</span><br><span class="line">00411816    | 0BC1                                  | or eax,ecx                                              | ecx:&quot;12345678901234567890123456789012&quot;</span><br><span class="line">00411818    | 0FB655 EF                             | movzx edx,byte ptr ss:[ebp-0x11]                        |</span><br><span class="line">0041181C    | F7D2                                  | not edx                                                 |</span><br><span class="line">0041181E    | 0FB64D FB                             | movzx ecx,byte ptr ss:[ebp-0x5]                         |</span><br><span class="line">00411822    | 0BD1                                  | or edx,ecx                                              | ecx:&quot;12345678901234567890123456789012&quot;</span><br><span class="line">00411824    | 23C2                                  | and eax,edx                                             |</span><br><span class="line">00411826    | F7D0                                  | not eax                                                 |</span><br><span class="line">00411828    | F7D0                                  | not eax                                                 |</span><br><span class="line">0041182A    | 83C0 01                               | add eax,0x1                                             |</span><br><span class="line">0041182D    | 8B55 08                               | mov edx,dword ptr ss:[ebp+0x8]                          |</span><br><span class="line">00411830    | 0355 E0                               | add edx,dword ptr ss:[ebp-0x20]                         |</span><br><span class="line">00411833    | 8802                                  | mov byte ptr ds:[edx],al                                |</span><br><span class="line">00411835    | EB A6                                 | jmp smc.4117DD                                          |</span><br><span class="line">00411837    | 5F                                    | pop edi                                                 |</span><br><span class="line">00411838    | 5E                                    | pop esi                                                 | esi:EntryPoint</span><br><span class="line">00411839    | 5B                                    | pop ebx                                                 |</span><br><span class="line">0041183A    | 81C4 E4000000                         | add esp,0xE4                                            |</span><br><span class="line">00411840    | 3BEC                                  | cmp ebp,esp                                             |</span><br><span class="line">00411842    | E8 0CFAFFFF                           | call smc.411253                                         |</span><br><span class="line">00411847    | 8BE5                                  | mov esp,ebp                                             |</span><br><span class="line">00411849    | 5D                                    | pop ebp                                                 |</span><br><span class="line">0041184A    | C3                                    | ret                                                     |</span><br></pre></td></tr></table></figure><p>然后解码</p><p>完成的操作是：用输入字符串的一个字节和后一个字节完成以下运算</p><p>设 第一个字节为X，第二个字节为Y</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = ((~X &amp; <span class="number">0xff</span>) | Y) &amp; ((~Y &amp; <span class="number">0xff</span>) | X) + <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>然后就爆破嘛</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">str</span> = [<span class="number">0x90</span>, <span class="number">0xa0</span>, <span class="number">0xf8</span>, <span class="number">0x93</span>, <span class="number">0x8f</span>, <span class="number">0xf8</span>, <span class="number">0xf3</span>, <span class="number">0xf2</span>, <span class="number">0xe7</span>, <span class="number">0x9f</span>, <span class="number">0xfb</span>, <span class="number">0x8f</span>, <span class="number">0xe9</span>, <span class="number">0x0</span>, <span class="number">0xeb</span>, <span class="number">0xe6</span>, <span class="number">0xed</span>, <span class="number">0xee</span>, <span class="number">0xed</span>, <span class="number">0xf4</span>, <span class="number">0xee</span>, <span class="number">0xe1</span>, <span class="number">0xfd</span>, <span class="number">0xe3</span>, <span class="number">0xe7</span>, <span class="number">0xfc</span>, <span class="number">0xe3</span>, <span class="number">0</span>, <span class="number">0x9a</span>, <span class="number">0</span>, <span class="number">0x9b</span>, <span class="number">0x39</span>] </span><br><span class="line">string = [] </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out</span>(<span class="params">a, b</span>): </span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">127</span>): </span><br><span class="line">       <span class="keyword">if</span> ((~i &amp; <span class="number">0xff</span>) | b) &amp; ((~b &amp; <span class="number">0xff</span>) | i) == (a-<span class="number">1</span>) &amp; <span class="number">0xff</span>: </span><br><span class="line">           string.append(<span class="built_in">chr</span>(i)) </span><br><span class="line">           <span class="keyword">return</span> i </span><br><span class="line">        </span><br><span class="line">num = <span class="built_in">str</span>[<span class="number">0</span>] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(<span class="built_in">str</span>)): </span><br><span class="line">   num = out(<span class="built_in">str</span>[<span class="built_in">len</span>(<span class="built_in">str</span>)-i-<span class="number">1</span>], num) </span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string)): </span><br><span class="line">   <span class="built_in">print</span>(string[<span class="built_in">len</span>(string)-i-<span class="number">1</span>], end=<span class="string">&quot;&quot;</span>) </span><br></pre></td></tr></table></figure><h2 id="三-maze"><a href="#三-maze" class="headerlink" title="三. maze"></a>三. maze</h2><h3 id="1-手动走迷宫（眼睛看瞎）"><a href="#1-手动走迷宫（眼睛看瞎）" class="headerlink" title="1.手动走迷宫（眼睛看瞎）"></a>1.手动走迷宫（眼睛看瞎）</h3><p>肯定要先找迷宫啊</p><p>先进main()函数</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307190013503-1605557614.png"></p><p>从头开始看</p><p>第一个函数</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307185926353-955856329.png"></p><p><img src="C:\Users\MYX\AppData\Roaming\Typora\typora-user-images\image-20230307190109212.png" alt="image-20230307190109212"></p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307190855513-83557992.png"></p><p>不知道在干嘛…</p><p>查出来readfsqword通常用于alarm函数，防止调试…那为什么这道题我能调啊</p><p>给dword_55648E002AB0赋了个0</p><p>第二个函数</p><p><img src="C:\Users\MYX\AppData\Roaming\Typora\typora-user-images\image-20230307190938417.png" alt="image-20230307190938417"></p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307191016007-2002213066.png"></p><p>大概率是本体了</p><p>把输入存到数组v4里面去，然后在把v4里面的一个个赋值给v0</p><p>先看那一堆判断</p><p>在把v0和100，115，119，27，97比较</p><p>如果v0等于27直接就寄了</p><p>还剩其他四个数，大概率就是控制怎么走迷宫</p><p>查一下ASCII码表</p><p>100————d</p><p>115————s</p><p>119————w</p><p>97————a</p><p>正好就是方向键</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307191817800-426291906.png"></p><p>然后就是这个函数，进去就正好是迷宫</p><p>不过这里是赋迷宫起点，起点找到后就退出了</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307191901642-539693526.png"></p><p>但从这里可以找到地图</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307201617203-252975388.png"></p><p>很乱…</p><p>但我让他跑起来后就清楚多了<img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307202315752-436415662.png"></p><p>ojbk直接复制出来分组，那么要分几组捏？</p><p><img src="https://img2023.cnblogs.com/blog/3069851/202303/3069851-20230307201330244-1431799892.png"></p><p>从main()函数这里可以看到，有三个迷宫</p><p>所以把刚刚cv出来的迷宫分成三组，然后用wasd走走走，记住走最短路径（理塘高速路5档起步走）就OK了</p><h3 id="2-Python脚本走迷宫"><a href="#2-Python脚本走迷宫" class="headerlink" title="2.Python脚本走迷宫"></a>2.Python脚本走迷宫</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;招新赛wp&quot;&gt;&lt;a href=&quot;#招新赛wp&quot; class=&quot;headerlink&quot; title=&quot;招新赛wp&quot;&gt;&lt;/a&gt;招新赛wp&lt;/h1&gt;&lt;h2 id=&quot;一-Base8&quot;&gt;&lt;a href=&quot;#一-Base8&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>招新赛</title>
    <link href="http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%8B%9B%E6%96%B0%E8%B5%9B/maze/"/>
    <id>http://example.com/2023/06/07/re/re%E7%BB%83%E4%B9%A0/%E6%8B%9B%E6%96%B0%E8%B5%9B/maze/</id>
    <published>2023-06-07T05:46:58.112Z</published>
    <updated>2023-06-07T05:47:24.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h1><h2 id="第一个迷宫"><a href="#第一个迷宫" class="headerlink" title="第一个迷宫"></a>第一个迷宫</h2><p>1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,<br> 1, 1, 1, 1, 1, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,<br> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</p><p>ddsssddddsssdss</p><h2 id="第二个迷宫"><a href="#第二个迷宫" class="headerlink" title="第二个迷宫"></a>第二个迷宫</h2><p>1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,<br> 1, 1, 0, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0<br> 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,<br> 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,<br> 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,<br> 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,<br> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,<br> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</p><p>sdwddddsssddddsssaassssddds</p><h2 id="第三个迷宫"><a href="#第三个迷宫" class="headerlink" title="第三个迷宫"></a>第三个迷宫</h2><p>0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,<br> 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,<br> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0</p><p>ddssddwddssssssdddssssdddss</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;maze&quot;&gt;&lt;a href=&quot;#maze&quot; class=&quot;headerlink&quot; title=&quot;maze&quot;&gt;&lt;/a&gt;maze&lt;/h1&gt;&lt;h2 id=&quot;第一个迷宫&quot;&gt;&lt;a href=&quot;#第一个迷宫&quot; class=&quot;headerlink&quot; title=&quot;第一个迷宫&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
